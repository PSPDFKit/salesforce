<apex:page >
    <!-- PSPDF Init div -->
    <!--<div id="pspdfkit" style="width: 100%; height: 100vh;"></div>-->
    <div id="editor" style="border: 1px solid black; width: 1024px; height: 600px; position: relative"></div>


    <script type="text/javascript"> __sfdcSessionId = '{!$Api.Session_Id}';</script>
    <script src="../../soap/ajax/54.0/connection.js" type="text/javascript"></script>

    <script src="{!$Resource.PSPDFKitDocumentAuthoring}" type="text/javascript"></script>
    <script type="text/javascript">



        console.log("in Document Authoring");
        //console.log(recId);
        let editorGlobal;

        window.addEventListener('message', handleDocumentAuthoringMessages);


        function base64ToArrayBuffer(base64) {
            const binaryString = window.atob(base64);
            const len = binaryString.length;
            const bytes = new Uint8Array(len);
            for (let i = 0; i < len; i++) {
                bytes[i] = binaryString.charCodeAt(i);
            }
            return bytes.buffer;
        }

        function arrayBufferToBase64(buffer) {
            let binary = '';
            const bytes = new Uint8Array(buffer);
            const len = bytes.byteLength;
            for (let i = 0; i < len; i++) {
                binary += String.fromCharCode(bytes[i]);
            }
            return window.btoa(binary);
        }
        
    
        async function handleDocumentAuthoringMessages(event) {


            if(event.data.message === "Send updated DOCX"){
                // exportDOCX: (options?: DocumentToDOCXOptions) => Promise<ArrayBuffer>;
                const docxArrayBuffer = await editorGlobal.exportDOCX();
                let base64String = arrayBufferToBase64(docxArrayBuffer);
                window.parent.postMessage({
                    type: 'base64Docx updated',
                    base64Docx: base64String
                }, '*');
                return;
            }

            console.log("in handleOpenAndSaveFiles");
            console.log(event);

            const docAuth = await DocAuth.createDocAuthInstance({
                // assets: { base: '<CUSTOM_DOCUMENT_AUTHORING_ASSETS_LOCATION>' }
                // licenseKey: '<YOUR_LICENSE_KEY>',
            });

            
            if(event.data.fileBase64){
                const arrayBuffer = base64ToArrayBuffer(event.data.fileBase64);
                

                const docAuth = await DocAuth.createDocAuthInstance();
                editorGlobal = DocAuth.createEditorInstance({
                    target: document.getElementById("editor"),
                    document: await docAuth.importDocx(Promise.resolve(arrayBuffer)),
                });
            }else{
                editorGlobal = DocAuth.createEditorInstance(
                    {
                        target: document.getElementById("editor"),
                        document: DocAuth.Utils.documentFromPlaintext("Coming soon: Edit your .DOCX files directly in Salesforce!"),
                        //document:  await docAuth.importDocx(Promise.resolve(event.data.fileBase64)),
                        
                    }
                    );
            }


        }            

    </script>
</apex:page>