{"version":3,"file":"modern/pspdfkit-lib/chunk-5148-0273752b08c7760f.js","mappings":"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","sources":["webpack://PSPDFKit/./node_modules/@formatjs/intl-pluralrules/get_internal_slots.js","webpack://PSPDFKit/./node_modules/@formatjs/intl-pluralrules/index.js","webpack://PSPDFKit/./node_modules/@formatjs/intl-pluralrules/node_modules/@formatjs/ecma402-abstract/lib/utils.js","webpack://PSPDFKit/./node_modules/@formatjs/intl-pluralrules/node_modules/@formatjs/ecma402-abstract/lib/DateTimeFormat/utils.js","webpack://PSPDFKit/./node_modules/@formatjs/intl-pluralrules/node_modules/@formatjs/ecma402-abstract/lib/DateTimeFormat/skeleton.js","webpack://PSPDFKit/./node_modules/@formatjs/intl-pluralrules/node_modules/@formatjs/ecma402-abstract/lib/DateTimeFormat/BestFitFormatMatcher.js","webpack://PSPDFKit/./node_modules/@formatjs/intl-pluralrules/node_modules/@formatjs/ecma402-abstract/lib/CanonicalizeLocaleList.js","webpack://PSPDFKit/./node_modules/@formatjs/intl-pluralrules/node_modules/@formatjs/ecma402-abstract/lib/CanonicalizeTimeZoneName.js","webpack://PSPDFKit/./node_modules/@formatjs/intl-pluralrules/node_modules/@formatjs/ecma402-abstract/lib/DateTimeFormat/BasicFormatMatcher.js","webpack://PSPDFKit/./node_modules/@formatjs/intl-pluralrules/node_modules/@formatjs/ecma402-abstract/lib/DateTimeFormat/DateTimeStyleFormat.js","webpack://PSPDFKit/./node_modules/@formatjs/intl-pluralrules/node_modules/@formatjs/ecma402-abstract/lib/262.js","webpack://PSPDFKit/./node_modules/@formatjs/intl-pluralrules/node_modules/@formatjs/ecma402-abstract/lib/DateTimeFormat/ToLocalTime.js","webpack://PSPDFKit/./node_modules/@formatjs/intl-pluralrules/node_modules/@formatjs/ecma402-abstract/lib/DateTimeFormat/FormatDateTimePattern.js","webpack://PSPDFKit/./node_modules/@formatjs/intl-pluralrules/node_modules/@formatjs/ecma402-abstract/lib/PartitionPattern.js","webpack://PSPDFKit/./node_modules/@formatjs/intl-pluralrules/node_modules/@formatjs/ecma402-abstract/lib/DateTimeFormat/PartitionDateTimePattern.js","webpack://PSPDFKit/./node_modules/@formatjs/intl-pluralrules/node_modules/@formatjs/ecma402-abstract/lib/DateTimeFormat/FormatDateTime.js","webpack://PSPDFKit/./node_modules/@formatjs/intl-pluralrules/node_modules/@formatjs/ecma402-abstract/lib/DateTimeFormat/PartitionDateTimeRangePattern.js","webpack://PSPDFKit/./node_modules/@formatjs/intl-pluralrules/node_modules/@formatjs/ecma402-abstract/lib/DateTimeFormat/FormatDateTimeRange.js","webpack://PSPDFKit/./node_modules/@formatjs/intl-pluralrules/node_modules/@formatjs/ecma402-abstract/lib/DateTimeFormat/FormatDateTimeRangeToParts.js","webpack://PSPDFKit/./node_modules/@formatjs/intl-pluralrules/node_modules/@formatjs/ecma402-abstract/lib/DateTimeFormat/FormatDateTimeToParts.js","webpack://PSPDFKit/./node_modules/@formatjs/intl-pluralrules/node_modules/@formatjs/ecma402-abstract/lib/DateTimeFormat/ToDateTimeOptions.js","webpack://PSPDFKit/./node_modules/@formatjs/intl-pluralrules/node_modules/@formatjs/ecma402-abstract/lib/GetOption.js","webpack://PSPDFKit/./node_modules/@formatjs/intl-pluralrules/node_modules/@formatjs/ecma402-abstract/lib/BestAvailableLocale.js","webpack://PSPDFKit/./node_modules/@formatjs/intl-pluralrules/node_modules/@formatjs/ecma402-abstract/lib/UnicodeExtensionValue.js","webpack://PSPDFKit/./node_modules/@formatjs/intl-pluralrules/node_modules/@formatjs/ecma402-abstract/lib/ResolveLocale.js","webpack://PSPDFKit/./node_modules/@formatjs/intl-pluralrules/node_modules/@formatjs/ecma402-abstract/lib/LookupMatcher.js","webpack://PSPDFKit/./node_modules/@formatjs/intl-pluralrules/node_modules/@formatjs/ecma402-abstract/lib/BestFitMatcher.js","webpack://PSPDFKit/./node_modules/@formatjs/intl-pluralrules/node_modules/@formatjs/ecma402-abstract/lib/IsValidTimeZoneName.js","webpack://PSPDFKit/./node_modules/@formatjs/intl-pluralrules/node_modules/@formatjs/ecma402-abstract/lib/DateTimeFormat/InitializeDateTimeFormat.js","webpack://PSPDFKit/./node_modules/@formatjs/intl-pluralrules/node_modules/@formatjs/ecma402-abstract/lib/IsWellFormedCurrencyCode.js","webpack://PSPDFKit/./node_modules/@formatjs/intl-pluralrules/node_modules/@formatjs/ecma402-abstract/lib/DisplayNames/CanonicalCodeForDisplayNames.js","webpack://PSPDFKit/./node_modules/@formatjs/intl-pluralrules/node_modules/@formatjs/ecma402-abstract/lib/DefaultNumberOption.js","webpack://PSPDFKit/./node_modules/@formatjs/intl-pluralrules/node_modules/@formatjs/ecma402-abstract/lib/GetNumberOption.js","webpack://PSPDFKit/./node_modules/@formatjs/intl-pluralrules/node_modules/@formatjs/ecma402-abstract/lib/IsSanctionedSimpleUnitIdentifier.js","webpack://PSPDFKit/./node_modules/@formatjs/intl-pluralrules/node_modules/@formatjs/ecma402-abstract/lib/IsWellFormedUnitIdentifier.js","webpack://PSPDFKit/./node_modules/@formatjs/intl-pluralrules/node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/ComputeExponentForMagnitude.js","webpack://PSPDFKit/./node_modules/@formatjs/intl-pluralrules/node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/ToRawPrecision.js","webpack://PSPDFKit/./node_modules/@formatjs/intl-pluralrules/node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/ToRawFixed.js","webpack://PSPDFKit/./node_modules/@formatjs/intl-pluralrules/node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/FormatNumericToString.js","webpack://PSPDFKit/./node_modules/@formatjs/intl-pluralrules/node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/ComputeExponent.js","webpack://PSPDFKit/./node_modules/@formatjs/intl-pluralrules/node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/CurrencyDigits.js","webpack://PSPDFKit/./node_modules/@formatjs/intl-pluralrules/node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/format_to_parts.js","webpack://PSPDFKit/./node_modules/@formatjs/intl-pluralrules/node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/PartitionNumberPattern.js","webpack://PSPDFKit/./node_modules/@formatjs/intl-pluralrules/node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/FormatNumericToParts.js","webpack://PSPDFKit/./node_modules/@formatjs/intl-pluralrules/node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/SetNumberFormatUnitOptions.js","webpack://PSPDFKit/./node_modules/@formatjs/intl-pluralrules/node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/SetNumberFormatDigitOptions.js","webpack://PSPDFKit/./node_modules/@formatjs/intl-pluralrules/node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/InitializeNumberFormat.js","webpack://PSPDFKit/./node_modules/@formatjs/intl-pluralrules/node_modules/@formatjs/ecma402-abstract/lib/PluralRules/GetOperands.js","webpack://PSPDFKit/./node_modules/@formatjs/intl-pluralrules/node_modules/@formatjs/ecma402-abstract/lib/PluralRules/InitializePluralRules.js","webpack://PSPDFKit/./node_modules/@formatjs/intl-pluralrules/node_modules/@formatjs/ecma402-abstract/lib/PluralRules/ResolvePlural.js","webpack://PSPDFKit/./node_modules/@formatjs/intl-pluralrules/node_modules/@formatjs/ecma402-abstract/lib/RelativeTimeFormat/SingularRelativeTimeUnit.js","webpack://PSPDFKit/./node_modules/@formatjs/intl-pluralrules/node_modules/@formatjs/ecma402-abstract/lib/RelativeTimeFormat/MakePartsList.js","webpack://PSPDFKit/./node_modules/@formatjs/intl-pluralrules/node_modules/@formatjs/ecma402-abstract/lib/RelativeTimeFormat/PartitionRelativeTimePattern.js","webpack://PSPDFKit/./node_modules/@formatjs/intl-pluralrules/node_modules/@formatjs/ecma402-abstract/lib/RelativeTimeFormat/FormatRelativeTime.js","webpack://PSPDFKit/./node_modules/@formatjs/intl-pluralrules/node_modules/@formatjs/ecma402-abstract/lib/RelativeTimeFormat/FormatRelativeTimeToParts.js","webpack://PSPDFKit/./node_modules/@formatjs/intl-pluralrules/node_modules/@formatjs/ecma402-abstract/lib/RelativeTimeFormat/InitializeRelativeTimeFormat.js","webpack://PSPDFKit/./node_modules/@formatjs/intl-pluralrules/node_modules/@formatjs/ecma402-abstract/lib/LookupSupportedLocales.js","webpack://PSPDFKit/./node_modules/@formatjs/intl-pluralrules/node_modules/@formatjs/ecma402-abstract/lib/SupportedLocales.js","webpack://PSPDFKit/./node_modules/@formatjs/intl-pluralrules/node_modules/@formatjs/ecma402-abstract/lib/data.js","webpack://PSPDFKit/./node_modules/@formatjs/intl-pluralrules/node_modules/@formatjs/ecma402-abstract/lib/types/date-time.js","webpack://PSPDFKit/./node_modules/@formatjs/intl-pluralrules/polyfill.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar internalSlotMap = new WeakMap();\nfunction getInternalSlots(x) {\n    var internalSlots = internalSlotMap.get(x);\n    if (!internalSlots) {\n        internalSlots = Object.create(null);\n        internalSlotMap.set(x, internalSlots);\n    }\n    return internalSlots;\n}\nexports.default = getInternalSlots;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PluralRules = void 0;\nvar tslib_1 = require(\"tslib\");\nvar ecma402_abstract_1 = require(\"@formatjs/ecma402-abstract\");\nvar get_internal_slots_1 = tslib_1.__importDefault(require(\"./get_internal_slots\"));\nfunction validateInstance(instance, method) {\n    if (!(instance instanceof PluralRules)) {\n        throw new TypeError(\"Method Intl.PluralRules.prototype.\" + method + \" called on incompatible receiver \" + String(instance));\n    }\n}\n/**\n * http://ecma-international.org/ecma-402/7.0/index.html#sec-pluralruleselect\n * @param locale\n * @param type\n * @param _n\n * @param param3\n */\nfunction PluralRuleSelect(locale, type, _n, _a) {\n    var IntegerDigits = _a.IntegerDigits, NumberOfFractionDigits = _a.NumberOfFractionDigits, FractionDigits = _a.FractionDigits;\n    return PluralRules.localeData[locale].fn(NumberOfFractionDigits\n        ? IntegerDigits + \".\" + FractionDigits\n        : IntegerDigits, type === 'ordinal');\n}\nvar PluralRules = /** @class */ (function () {\n    function PluralRules(locales, options) {\n        // test262/test/intl402/RelativeTimeFormat/constructor/constructor/newtarget-undefined.js\n        // Cannot use `new.target` bc of IE11 & TS transpiles it to something else\n        var newTarget = this && this instanceof PluralRules ? this.constructor : void 0;\n        if (!newTarget) {\n            throw new TypeError(\"Intl.PluralRules must be called with 'new'\");\n        }\n        return ecma402_abstract_1.InitializePluralRules(this, locales, options, {\n            availableLocales: PluralRules.availableLocales,\n            relevantExtensionKeys: PluralRules.relevantExtensionKeys,\n            localeData: PluralRules.localeData,\n            getDefaultLocale: PluralRules.getDefaultLocale,\n            getInternalSlots: get_internal_slots_1.default,\n        });\n    }\n    PluralRules.prototype.resolvedOptions = function () {\n        validateInstance(this, 'resolvedOptions');\n        var opts = Object.create(null);\n        var internalSlots = get_internal_slots_1.default(this);\n        opts.locale = internalSlots.locale;\n        opts.type = internalSlots.type;\n        [\n            'minimumIntegerDigits',\n            'minimumFractionDigits',\n            'maximumFractionDigits',\n            'minimumSignificantDigits',\n            'maximumSignificantDigits',\n        ].forEach(function (field) {\n            var val = internalSlots[field];\n            if (val !== undefined) {\n                opts[field] = val;\n            }\n        });\n        opts.pluralCategories = tslib_1.__spreadArrays(PluralRules.localeData[opts.locale].categories[opts.type]);\n        return opts;\n    };\n    PluralRules.prototype.select = function (val) {\n        var pr = this;\n        validateInstance(pr, 'select');\n        var n = ecma402_abstract_1.ToNumber(val);\n        return ecma402_abstract_1.ResolvePlural(pr, n, { getInternalSlots: get_internal_slots_1.default, PluralRuleSelect: PluralRuleSelect });\n    };\n    PluralRules.prototype.toString = function () {\n        return '[object Intl.PluralRules]';\n    };\n    PluralRules.supportedLocalesOf = function (locales, options) {\n        return ecma402_abstract_1.SupportedLocales(PluralRules.availableLocales, ecma402_abstract_1.CanonicalizeLocaleList(locales), options);\n    };\n    PluralRules.__addLocaleData = function () {\n        var data = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            data[_i] = arguments[_i];\n        }\n        var _loop_1 = function (datum) {\n            var availableLocales = datum.availableLocales;\n            availableLocales.forEach(function (locale) {\n                try {\n                    PluralRules.localeData[locale] = ecma402_abstract_1.unpackData(locale, datum);\n                }\n                catch (e) {\n                    if (ecma402_abstract_1.isMissingLocaleDataError(e)) {\n                        // If we just don't have data for certain locale, that's ok\n                        return;\n                    }\n                    throw e;\n                }\n            });\n        };\n        for (var _a = 0, data_1 = data; _a < data_1.length; _a++) {\n            var datum = data_1[_a];\n            _loop_1(datum);\n        }\n        PluralRules.availableLocales = Object.keys(PluralRules.localeData);\n        if (!PluralRules.__defaultLocale) {\n            PluralRules.__defaultLocale = PluralRules.availableLocales[0];\n        }\n    };\n    PluralRules.getDefaultLocale = function () {\n        return PluralRules.__defaultLocale;\n    };\n    PluralRules.localeData = {};\n    PluralRules.availableLocales = [];\n    PluralRules.__defaultLocale = 'en';\n    PluralRules.relevantExtensionKeys = [];\n    PluralRules.polyfilled = true;\n    return PluralRules;\n}());\nexports.PluralRules = PluralRules;\ntry {\n    // IE11 does not have Symbol\n    if (typeof Symbol !== 'undefined') {\n        Object.defineProperty(PluralRules.prototype, Symbol.toStringTag, {\n            value: 'Intl.PluralRules',\n            writable: false,\n            enumerable: false,\n            configurable: true,\n        });\n    }\n    try {\n        // https://github.com/tc39/test262/blob/master/test/intl402/PluralRules/length.js\n        Object.defineProperty(PluralRules, 'length', {\n            value: 0,\n            writable: false,\n            enumerable: false,\n            configurable: true,\n        });\n    }\n    catch (error) {\n        // IE 11 sets Function.prototype.length to be non-configurable which will cause the\n        // above Object.defineProperty to throw an error.\n    }\n    // https://github.com/tc39/test262/blob/master/test/intl402/RelativeTimeFormat/constructor/length.js\n    Object.defineProperty(PluralRules.prototype.constructor, 'length', {\n        value: 0,\n        writable: false,\n        enumerable: false,\n        configurable: true,\n    });\n    // https://github.com/tc39/test262/blob/master/test/intl402/RelativeTimeFormat/constructor/supportedLocalesOf/length.js\n    Object.defineProperty(PluralRules.supportedLocalesOf, 'length', {\n        value: 1,\n        writable: false,\n        enumerable: false,\n        configurable: true,\n    });\n}\ncatch (ex) {\n    // Meta fixes for test262\n}\n","/**\n * Cannot do Math.log(x) / Math.log(10) bc if IEEE floating point issue\n * @param x number\n */\nexport function getMagnitude(x) {\n    // Cannot count string length via Number.toString because it may use scientific notation\n    // for very small or very large numbers.\n    return Math.floor(Math.log(x) * Math.LOG10E);\n}\nexport function repeat(s, times) {\n    if (typeof s.repeat === 'function') {\n        return s.repeat(times);\n    }\n    var arr = new Array(times);\n    for (var i = 0; i < arr.length; i++) {\n        arr[i] = s;\n    }\n    return arr.join('');\n}\nexport function setInternalSlot(map, pl, field, value) {\n    if (!map.get(pl)) {\n        map.set(pl, Object.create(null));\n    }\n    var slots = map.get(pl);\n    slots[field] = value;\n}\nexport function setMultiInternalSlots(map, pl, props) {\n    for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {\n        var k = _a[_i];\n        setInternalSlot(map, pl, k, props[k]);\n    }\n}\nexport function getInternalSlot(map, pl, field) {\n    return getMultiInternalSlots(map, pl, field)[field];\n}\nexport function getMultiInternalSlots(map, pl) {\n    var fields = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        fields[_i - 2] = arguments[_i];\n    }\n    var slots = map.get(pl);\n    if (!slots) {\n        throw new TypeError(pl + \" InternalSlot has not been initialized\");\n    }\n    return fields.reduce(function (all, f) {\n        all[f] = slots[f];\n        return all;\n    }, Object.create(null));\n}\nexport function isLiteralPart(patternPart) {\n    return patternPart.type === 'literal';\n}\n/*\n  17 ECMAScript Standard Built-in Objects:\n    Every built-in Function object, including constructors, that is not\n    identified as an anonymous function has a name property whose value\n    is a String.\n\n    Unless otherwise specified, the name property of a built-in Function\n    object, if it exists, has the attributes { [[Writable]]: false,\n    [[Enumerable]]: false, [[Configurable]]: true }.\n*/\nexport function defineProperty(target, name, _a) {\n    var value = _a.value;\n    Object.defineProperty(target, name, {\n        configurable: true,\n        enumerable: false,\n        writable: true,\n        value: value,\n    });\n}\nexport var UNICODE_EXTENSION_SEQUENCE_REGEX = /-u(?:-[0-9a-z]{2,8})+/gi;\nexport function invariant(condition, message, Err) {\n    if (Err === void 0) { Err = Error; }\n    if (!condition) {\n        throw new Err(message);\n    }\n}\n","export var DATE_TIME_PROPS = [\n    'weekday',\n    'era',\n    'year',\n    'month',\n    'day',\n    'hour',\n    'minute',\n    'second',\n    'timeZoneName',\n];\nexport var removalPenalty = 120;\nexport var additionPenalty = 20;\nexport var differentNumericTypePenalty = 15;\nexport var longLessPenalty = 8;\nexport var longMorePenalty = 6;\nexport var shortLessPenalty = 6;\nexport var shortMorePenalty = 3;\n","import { __assign } from \"tslib\";\n/**\n * https://unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * Credit: https://github.com/caridy/intl-datetimeformat-pattern/blob/master/index.js\n * with some tweaks\n */\nvar DATE_TIME_REGEX = /(?:[Eec]{1,6}|G{1,5}|[Qq]{1,5}|(?:[yYur]+|U{1,5})|[ML]{1,5}|d{1,2}|D{1,3}|F{1}|[abB]{1,5}|[hkHK]{1,2}|w{1,2}|W{1}|m{1,2}|s{1,2}|[zZOvVxX]{1,4})(?=([^']*'[^']*')*[^']*$)/g;\n// trim patterns after transformations\nvar expPatternTrimmer = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g;\nfunction matchSkeletonPattern(match, result) {\n    var len = match.length;\n    switch (match[0]) {\n        // Era\n        case 'G':\n            result.era = len === 4 ? 'long' : len === 5 ? 'narrow' : 'short';\n            return '{era}';\n        // Year\n        case 'y':\n        case 'Y':\n        case 'u':\n        case 'U':\n        case 'r':\n            result.year = len === 2 ? '2-digit' : 'numeric';\n            return '{year}';\n        // Quarter\n        case 'q':\n        case 'Q':\n            throw new RangeError('`w/Q` (quarter) patterns are not supported');\n        // Month\n        case 'M':\n        case 'L':\n            result.month = ['numeric', '2-digit', 'short', 'long', 'narrow'][len - 1];\n            return '{month}';\n        // Week\n        case 'w':\n        case 'W':\n            throw new RangeError('`w/W` (week of year) patterns are not supported');\n        case 'd':\n            result.day = ['numeric', '2-digit'][len - 1];\n            return '{day}';\n        case 'D':\n        case 'F':\n        case 'g':\n            result.day = 'numeric';\n            return '{day}';\n        // Weekday\n        case 'E':\n            result.weekday = len === 4 ? 'long' : len === 5 ? 'narrow' : 'short';\n            return '{weekday}';\n        case 'e':\n            result.weekday = [\n                'numeric',\n                '2-digit',\n                'short',\n                'long',\n                'narrow',\n                'short',\n            ][len - 1];\n            return '{weekday}';\n        case 'c':\n            result.weekday = [\n                'numeric',\n                undefined,\n                'short',\n                'long',\n                'narrow',\n                'short',\n            ][len - 1];\n            return '{weekday}';\n        // Period\n        case 'a': // AM, PM\n        case 'b': // am, pm, noon, midnight\n        case 'B': // flexible day periods\n            result.hour12 = true;\n            return '{ampm}';\n        // Hour\n        case 'h':\n            result.hour = ['numeric', '2-digit'][len - 1];\n            result.hour12 = true;\n            return '{hour}';\n        case 'H':\n            result.hour = ['numeric', '2-digit'][len - 1];\n            return '{hour}';\n        case 'K':\n            result.hour = ['numeric', '2-digit'][len - 1];\n            result.hour12 = true;\n            return '{hour}';\n        case 'k':\n            result.hour = ['numeric', '2-digit'][len - 1];\n            return '{hour}';\n        case 'j':\n        case 'J':\n        case 'C':\n            throw new RangeError('`j/J/C` (hour) patterns are not supported, use `h/H/K/k` instead');\n        // Minute\n        case 'm':\n            result.minute = ['numeric', '2-digit'][len - 1];\n            return '{minute}';\n        // Second\n        case 's':\n            result.second = ['numeric', '2-digit'][len - 1];\n            return '{second}';\n        case 'S':\n        case 'A':\n            result.second = 'numeric';\n            return '{second}';\n        // Zone\n        case 'z': // 1..3, 4: specific non-location format\n        case 'Z': // 1..3, 4, 5: The ISO8601 varios formats\n        case 'O': // 1, 4: miliseconds in day short, long\n        case 'v': // 1, 4: generic non-location format\n        case 'V': // 1, 2, 3, 4: time zone ID or city\n        case 'X': // 1, 2, 3, 4: The ISO8601 varios formats\n        case 'x': // 1, 2, 3, 4: The ISO8601 varios formats\n            result.timeZoneName = len < 4 ? 'short' : 'long';\n            return '{timeZoneName}';\n    }\n    return '';\n}\nfunction skeletonTokenToTable2(c) {\n    switch (c) {\n        // Era\n        case 'G':\n            return 'era';\n        // Year\n        case 'y':\n        case 'Y':\n        case 'u':\n        case 'U':\n        case 'r':\n            return 'year';\n        // Month\n        case 'M':\n        case 'L':\n            return 'month';\n        // Day\n        case 'd':\n        case 'D':\n        case 'F':\n        case 'g':\n            return 'day';\n        // Period\n        case 'a': // AM, PM\n        case 'b': // am, pm, noon, midnight\n        case 'B': // flexible day periods\n            return 'ampm';\n        // Hour\n        case 'h':\n        case 'H':\n        case 'K':\n        case 'k':\n            return 'hour';\n        // Minute\n        case 'm':\n            return 'minute';\n        // Second\n        case 's':\n        case 'S':\n        case 'A':\n            return 'second';\n        default:\n            throw new RangeError('Invalid range pattern token');\n    }\n}\nexport function processDateTimePattern(pattern, result) {\n    var literals = [];\n    // Use skeleton to populate result, but use mapped pattern to populate pattern\n    var pattern12 = pattern\n        // Double apostrophe\n        .replace(/'{2}/g, '{apostrophe}')\n        // Apostrophe-escaped\n        .replace(/'(.*?)'/g, function (_, literal) {\n        literals.push(literal);\n        return \"$$\" + (literals.length - 1) + \"$$\";\n    })\n        .replace(DATE_TIME_REGEX, function (m) { return matchSkeletonPattern(m, result || {}); });\n    //Restore literals\n    if (literals.length) {\n        pattern12 = pattern12\n            .replace(/\\$\\$(\\d+)\\$\\$/g, function (_, i) {\n            return literals[+i];\n        })\n            .replace(/\\{apostrophe\\}/g, \"'\");\n    }\n    // Handle apostrophe-escaped things\n    return [\n        pattern12\n            .replace(/([\\s\\uFEFF\\xA0])\\{ampm\\}([\\s\\uFEFF\\xA0])/, '$1')\n            .replace('{ampm}', '')\n            .replace(expPatternTrimmer, ''),\n        pattern12,\n    ];\n}\n/**\n * Parse Date time skeleton into Intl.DateTimeFormatOptions\n * Ref: https://unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * @public\n * @param skeleton skeleton string\n */\nexport function parseDateTimeSkeleton(skeleton, rawPattern, rangePatterns, intervalFormatFallback) {\n    if (rawPattern === void 0) { rawPattern = skeleton; }\n    var result = {\n        pattern: '',\n        pattern12: '',\n        skeleton: skeleton,\n        rawPattern: rawPattern,\n        rangePatterns: {},\n        rangePatterns12: {},\n    };\n    if (rangePatterns) {\n        for (var k in rangePatterns) {\n            var key = skeletonTokenToTable2(k);\n            var rawPattern_1 = rangePatterns[k];\n            var intervalResult = {\n                patternParts: [],\n            };\n            var _a = processDateTimePattern(rawPattern_1, intervalResult), pattern_1 = _a[0], pattern12_1 = _a[1];\n            result.rangePatterns[key] = __assign(__assign({}, intervalResult), { patternParts: splitRangePattern(pattern_1) });\n            result.rangePatterns12[key] = __assign(__assign({}, intervalResult), { patternParts: splitRangePattern(pattern12_1) });\n        }\n    }\n    else if (intervalFormatFallback) {\n        var patternParts = splitFallbackRangePattern(intervalFormatFallback);\n        result.rangePatterns.default = {\n            patternParts: patternParts,\n        };\n        result.rangePatterns12.default = {\n            patternParts: patternParts,\n        };\n    }\n    // Process skeleton\n    skeleton.replace(DATE_TIME_REGEX, function (m) { return matchSkeletonPattern(m, result); });\n    var _b = processDateTimePattern(rawPattern), pattern = _b[0], pattern12 = _b[1];\n    result.pattern = pattern;\n    result.pattern12 = pattern12;\n    return result;\n}\nexport function splitFallbackRangePattern(pattern) {\n    var parts = pattern.split(/(\\{[0|1]\\})/g).filter(Boolean);\n    return parts.map(function (pattern) {\n        switch (pattern) {\n            case '{0}':\n                return {\n                    source: \"startRange\" /* startRange */,\n                    pattern: pattern,\n                };\n            case '{1}':\n                return {\n                    source: \"endRange\" /* endRange */,\n                    pattern: pattern,\n                };\n            default:\n                return {\n                    source: \"shared\" /* shared */,\n                    pattern: pattern,\n                };\n        }\n    });\n}\nexport function splitRangePattern(pattern) {\n    var PART_REGEX = /\\{(.*?)\\}/g;\n    // Map of part and index within the string\n    var parts = {};\n    var match;\n    var splitIndex = 0;\n    while ((match = PART_REGEX.exec(pattern))) {\n        if (!(match[0] in parts)) {\n            parts[match[0]] = match.index;\n        }\n        else {\n            splitIndex = match.index;\n            break;\n        }\n    }\n    if (!splitIndex) {\n        return [\n            {\n                source: \"startRange\" /* startRange */,\n                pattern: pattern,\n            },\n        ];\n    }\n    return [\n        {\n            source: \"startRange\" /* startRange */,\n            pattern: pattern.slice(0, splitIndex),\n        },\n        {\n            source: \"endRange\" /* endRange */,\n            pattern: pattern.slice(splitIndex),\n        },\n    ];\n}\n","import { __assign } from \"tslib\";\nimport { invariant } from '../utils';\nimport { DATE_TIME_PROPS, removalPenalty, additionPenalty, differentNumericTypePenalty, longMorePenalty, shortMorePenalty, shortLessPenalty, longLessPenalty, } from './utils';\nimport { processDateTimePattern } from './skeleton';\nfunction isNumericType(t) {\n    return t === 'numeric' || t === '2-digit';\n}\n/**\n * Credit: https://github.com/andyearnshaw/Intl.js/blob/0958dc1ad8153f1056653ea22b8208f0df289a4e/src/12.datetimeformat.js#L611\n * with some modifications\n * @param options\n * @param format\n */\nexport function bestFitFormatMatcherScore(options, format) {\n    var score = 0;\n    if (options.hour12 && !format.hour12) {\n        score -= removalPenalty;\n    }\n    else if (!options.hour12 && format.hour12) {\n        score -= additionPenalty;\n    }\n    for (var _i = 0, DATE_TIME_PROPS_1 = DATE_TIME_PROPS; _i < DATE_TIME_PROPS_1.length; _i++) {\n        var prop = DATE_TIME_PROPS_1[_i];\n        var optionsProp = options[prop];\n        var formatProp = format[prop];\n        if (optionsProp === undefined && formatProp !== undefined) {\n            score -= additionPenalty;\n        }\n        else if (optionsProp !== undefined && formatProp === undefined) {\n            score -= removalPenalty;\n        }\n        else if (optionsProp !== formatProp) {\n            // extra penalty for numeric vs non-numeric\n            if (isNumericType(optionsProp) !==\n                isNumericType(formatProp)) {\n                score -= differentNumericTypePenalty;\n            }\n            else {\n                var values = ['2-digit', 'numeric', 'narrow', 'short', 'long'];\n                var optionsPropIndex = values.indexOf(optionsProp);\n                var formatPropIndex = values.indexOf(formatProp);\n                var delta = Math.max(-2, Math.min(formatPropIndex - optionsPropIndex, 2));\n                if (delta === 2) {\n                    score -= longMorePenalty;\n                }\n                else if (delta === 1) {\n                    score -= shortMorePenalty;\n                }\n                else if (delta === -1) {\n                    score -= shortLessPenalty;\n                }\n                else if (delta === -2) {\n                    score -= longLessPenalty;\n                }\n            }\n        }\n    }\n    return score;\n}\n/**\n * https://tc39.es/ecma402/#sec-bestfitformatmatcher\n * Just alias to basic for now\n * @param options\n * @param formats\n * @param implDetails Implementation details\n */\nexport function BestFitFormatMatcher(options, formats) {\n    var bestScore = -Infinity;\n    var bestFormat = formats[0];\n    invariant(Array.isArray(formats), 'formats should be a list of things');\n    for (var _i = 0, formats_1 = formats; _i < formats_1.length; _i++) {\n        var format = formats_1[_i];\n        var score = bestFitFormatMatcherScore(options, format);\n        if (score > bestScore) {\n            bestScore = score;\n            bestFormat = format;\n        }\n    }\n    var skeletonFormat = __assign({}, bestFormat);\n    var patternFormat = { rawPattern: bestFormat.rawPattern };\n    processDateTimePattern(bestFormat.rawPattern, patternFormat);\n    // Kinda following https://github.com/unicode-org/icu/blob/dd50e38f459d84e9bf1b0c618be8483d318458ad/icu4j/main/classes/core/src/com/ibm/icu/text/DateTimePatternGenerator.java\n    // Method adjustFieldTypes\n    for (var prop in skeletonFormat) {\n        var skeletonValue = skeletonFormat[prop];\n        var patternValue = patternFormat[prop];\n        var requestedValue = options[prop];\n        // Don't mess with minute/second or we can get in the situation of\n        // 7:0:0 which is weird\n        if (prop === 'minute' || prop === 'second') {\n            continue;\n        }\n        // Nothing to do here\n        if (!requestedValue) {\n            continue;\n        }\n        // https://unicode.org/reports/tr35/tr35-dates.html#Matching_Skeletons\n        // Looks like we should not convert numeric to alphabetic but the other way\n        // around is ok\n        if (isNumericType(patternValue) &&\n            !isNumericType(requestedValue)) {\n            continue;\n        }\n        if (skeletonValue === requestedValue) {\n            continue;\n        }\n        patternFormat[prop] = requestedValue;\n    }\n    // Copy those over\n    patternFormat.pattern = skeletonFormat.pattern;\n    patternFormat.pattern12 = skeletonFormat.pattern12;\n    patternFormat.skeleton = skeletonFormat.skeleton;\n    patternFormat.rangePatterns = skeletonFormat.rangePatterns;\n    patternFormat.rangePatterns12 = skeletonFormat.rangePatterns12;\n    return patternFormat;\n}\n","/**\n * http://ecma-international.org/ecma-402/7.0/index.html#sec-canonicalizelocalelist\n * @param locales\n */\nexport function CanonicalizeLocaleList(locales) {\n    // TODO\n    return Intl.getCanonicalLocales(locales);\n}\n","/**\n * https://tc39.es/ecma402/#sec-canonicalizetimezonename\n * @param tz\n */\nexport function CanonicalizeTimeZoneName(tz, _a) {\n    var tzData = _a.tzData, uppercaseLinks = _a.uppercaseLinks;\n    var uppercasedTz = tz.toUpperCase();\n    var uppercasedZones = Object.keys(tzData).reduce(function (all, z) {\n        all[z.toUpperCase()] = z;\n        return all;\n    }, {});\n    var ianaTimeZone = uppercaseLinks[uppercasedTz] || uppercasedZones[uppercasedTz];\n    if (ianaTimeZone === 'Etc/UTC' || ianaTimeZone === 'Etc/GMT') {\n        return 'UTC';\n    }\n    return ianaTimeZone;\n}\n","import { __assign } from \"tslib\";\nimport { invariant } from '../utils';\nimport { DATE_TIME_PROPS, additionPenalty, removalPenalty, longMorePenalty, shortMorePenalty, shortLessPenalty, longLessPenalty, } from './utils';\n/**\n * https://tc39.es/ecma402/#sec-basicformatmatcher\n * @param options\n * @param formats\n */\nexport function BasicFormatMatcher(options, formats) {\n    var bestScore = -Infinity;\n    var bestFormat = formats[0];\n    invariant(Array.isArray(formats), 'formats should be a list of things');\n    for (var _i = 0, formats_1 = formats; _i < formats_1.length; _i++) {\n        var format = formats_1[_i];\n        var score = 0;\n        for (var _a = 0, DATE_TIME_PROPS_1 = DATE_TIME_PROPS; _a < DATE_TIME_PROPS_1.length; _a++) {\n            var prop = DATE_TIME_PROPS_1[_a];\n            var optionsProp = options[prop];\n            var formatProp = format[prop];\n            if (optionsProp === undefined && formatProp !== undefined) {\n                score -= additionPenalty;\n            }\n            else if (optionsProp !== undefined && formatProp === undefined) {\n                score -= removalPenalty;\n            }\n            else if (optionsProp !== formatProp) {\n                var values = ['2-digit', 'numeric', 'narrow', 'short', 'long'];\n                var optionsPropIndex = values.indexOf(optionsProp);\n                var formatPropIndex = values.indexOf(formatProp);\n                var delta = Math.max(-2, Math.min(formatPropIndex - optionsPropIndex, 2));\n                if (delta === 2) {\n                    score -= longMorePenalty;\n                }\n                else if (delta === 1) {\n                    score -= shortMorePenalty;\n                }\n                else if (delta === -1) {\n                    score -= shortLessPenalty;\n                }\n                else if (delta === -2) {\n                    score -= longLessPenalty;\n                }\n            }\n        }\n        if (score > bestScore) {\n            bestScore = score;\n            bestFormat = format;\n        }\n    }\n    return __assign({}, bestFormat);\n}\n","import { invariant } from '../utils';\nexport function DateTimeStyleFormat(dateStyle, timeStyle, dataLocaleData) {\n    var dateFormat, timeFormat;\n    if (timeStyle !== undefined) {\n        invariant(timeStyle === 'full' ||\n            timeStyle === 'long' ||\n            timeStyle === 'medium' ||\n            timeStyle === 'short', 'invalid timeStyle');\n        timeFormat = dataLocaleData.timeFormat[timeStyle];\n    }\n    if (dateStyle !== undefined) {\n        invariant(dateStyle === 'full' ||\n            dateStyle === 'long' ||\n            dateStyle === 'medium' ||\n            dateStyle === 'short', 'invalid dateStyle');\n        dateFormat = dataLocaleData.dateFormat[dateStyle];\n    }\n    if (dateStyle !== undefined && timeStyle !== undefined) {\n        var format = {};\n        for (var field in dateFormat) {\n            if (field !== 'pattern') {\n                // @ts-ignore\n                format[field] = dateFormat[field];\n            }\n        }\n        for (var field in timeFormat) {\n            if (field !== 'pattern' && field !== 'pattern12') {\n                // @ts-ignore\n                format[field] = timeFormat[field];\n            }\n        }\n        var connector = dataLocaleData.dateTimeFormat[dateStyle];\n        var pattern = connector\n            .replace('{0}', timeFormat.pattern)\n            .replace('{1}', dateFormat.pattern);\n        format.pattern = pattern;\n        if ('pattern12' in timeFormat) {\n            var pattern12 = connector\n                .replace('{0}', timeFormat.pattern12)\n                .replace('{1}', dateFormat.pattern);\n            format.pattern12 = pattern12;\n        }\n        return format;\n    }\n    if (timeStyle !== undefined) {\n        return timeFormat;\n    }\n    invariant(dateStyle !== undefined, 'dateStyle should not be undefined');\n    return dateFormat;\n}\n","/**\n * https://tc39.es/ecma262/#sec-tostring\n */\nexport function ToString(o) {\n    // Only symbol is irregular...\n    if (typeof o === 'symbol') {\n        throw TypeError('Cannot convert a Symbol value to a string');\n    }\n    return String(o);\n}\n/**\n * https://tc39.es/ecma262/#sec-tonumber\n * @param val\n */\nexport function ToNumber(val) {\n    if (val === undefined) {\n        return NaN;\n    }\n    if (val === null) {\n        return +0;\n    }\n    if (typeof val === 'boolean') {\n        return val ? 1 : +0;\n    }\n    if (typeof val === 'number') {\n        return val;\n    }\n    if (typeof val === 'symbol' || typeof val === 'bigint') {\n        throw new TypeError('Cannot convert symbol/bigint to number');\n    }\n    return Number(val);\n}\n/**\n * https://tc39.es/ecma262/#sec-tointeger\n * @param n\n */\nfunction ToInteger(n) {\n    var number = ToNumber(n);\n    if (isNaN(number) || SameValue(number, -0)) {\n        return 0;\n    }\n    if (isFinite(number)) {\n        return number;\n    }\n    var integer = Math.floor(Math.abs(number));\n    if (number < 0) {\n        integer = -integer;\n    }\n    if (SameValue(integer, -0)) {\n        return 0;\n    }\n    return integer;\n}\n/**\n * https://tc39.es/ecma262/#sec-timeclip\n * @param time\n */\nexport function TimeClip(time) {\n    if (!isFinite(time)) {\n        return NaN;\n    }\n    if (Math.abs(time) > 8.64 * 1e16) {\n        return NaN;\n    }\n    return ToInteger(time);\n}\n/**\n * https://tc39.es/ecma262/#sec-toobject\n * @param arg\n */\nexport function ToObject(arg) {\n    if (arg == null) {\n        throw new TypeError('undefined/null cannot be converted to object');\n    }\n    return Object(arg);\n}\n/**\n * https://www.ecma-international.org/ecma-262/11.0/index.html#sec-samevalue\n * @param x\n * @param y\n */\nexport function SameValue(x, y) {\n    if (Object.is) {\n        return Object.is(x, y);\n    }\n    // SameValue algorithm\n    if (x === y) {\n        // Steps 1-5, 7-10\n        // Steps 6.b-6.e: +0 != -0\n        return x !== 0 || 1 / x === 1 / y;\n    }\n    // Step 6.a: NaN == NaN\n    return x !== x && y !== y;\n}\n/**\n * https://www.ecma-international.org/ecma-262/11.0/index.html#sec-arraycreate\n * @param len\n */\nexport function ArrayCreate(len) {\n    return new Array(len);\n}\n/**\n * https://www.ecma-international.org/ecma-262/11.0/index.html#sec-hasownproperty\n * @param o\n * @param prop\n */\nexport function HasOwnProperty(o, prop) {\n    return Object.prototype.hasOwnProperty.call(o, prop);\n}\n/**\n * https://www.ecma-international.org/ecma-262/11.0/index.html#sec-type\n * @param x\n */\nexport function Type(x) {\n    if (x === null) {\n        return 'Null';\n    }\n    if (typeof x === 'undefined') {\n        return 'Undefined';\n    }\n    if (typeof x === 'function' || typeof x === 'object') {\n        return 'Object';\n    }\n    if (typeof x === 'number') {\n        return 'Number';\n    }\n    if (typeof x === 'boolean') {\n        return 'Boolean';\n    }\n    if (typeof x === 'string') {\n        return 'String';\n    }\n    if (typeof x === 'symbol') {\n        return 'Symbol';\n    }\n    if (typeof x === 'bigint') {\n        return 'BigInt';\n    }\n}\nvar MS_PER_DAY = 86400000;\n/**\n * https://www.ecma-international.org/ecma-262/11.0/index.html#eqn-modulo\n * @param x\n * @param y\n * @return k of the same sign as y\n */\nfunction mod(x, y) {\n    return x - Math.floor(x / y) * y;\n}\n/**\n * https://tc39.es/ecma262/#eqn-Day\n * @param t\n */\nexport function Day(t) {\n    return Math.floor(t / MS_PER_DAY);\n}\n/**\n * https://tc39.es/ecma262/#sec-week-day\n * @param t\n */\nexport function WeekDay(t) {\n    return mod(Day(t) + 4, 7);\n}\n/**\n * https://tc39.es/ecma262/#sec-year-number\n * @param y\n */\nexport function DayFromYear(y) {\n    return (365 * (y - 1970) +\n        Math.floor((y - 1969) / 4) -\n        Math.floor((y - 1901) / 100) +\n        Math.floor((y - 1601) / 400));\n}\n/**\n * https://tc39.es/ecma262/#sec-year-number\n * @param y\n */\nexport function TimeFromYear(y) {\n    return MS_PER_DAY * DayFromYear(y);\n}\n/**\n * https://tc39.es/ecma262/#sec-year-number\n * @param t\n */\nexport function YearFromTime(t) {\n    var min = Math.ceil(t / MS_PER_DAY / 366);\n    var y = min;\n    while (TimeFromYear(y) <= t) {\n        y++;\n    }\n    return y - 1;\n}\nexport function DaysInYear(y) {\n    if (y % 4 !== 0) {\n        return 365;\n    }\n    if (y % 100 !== 0) {\n        return 366;\n    }\n    if (y % 400 !== 0) {\n        return 365;\n    }\n    return 366;\n}\nexport function DayWithinYear(t) {\n    return Day(t) - DayFromYear(YearFromTime(t));\n}\nexport function InLeapYear(t) {\n    return DaysInYear(YearFromTime(t)) === 365 ? 0 : 1;\n}\n/**\n * https://tc39.es/ecma262/#sec-month-number\n * @param t\n */\nexport function MonthFromTime(t) {\n    var dwy = DayWithinYear(t);\n    var leap = InLeapYear(t);\n    if (dwy >= 0 && dwy < 31) {\n        return 0;\n    }\n    if (dwy < 59 + leap) {\n        return 1;\n    }\n    if (dwy < 90 + leap) {\n        return 2;\n    }\n    if (dwy < 120 + leap) {\n        return 3;\n    }\n    if (dwy < 151 + leap) {\n        return 4;\n    }\n    if (dwy < 181 + leap) {\n        return 5;\n    }\n    if (dwy < 212 + leap) {\n        return 6;\n    }\n    if (dwy < 243 + leap) {\n        return 7;\n    }\n    if (dwy < 273 + leap) {\n        return 8;\n    }\n    if (dwy < 304 + leap) {\n        return 9;\n    }\n    if (dwy < 334 + leap) {\n        return 10;\n    }\n    if (dwy < 365 + leap) {\n        return 11;\n    }\n    throw new Error('Invalid time');\n}\nexport function DateFromTime(t) {\n    var dwy = DayWithinYear(t);\n    var mft = MonthFromTime(t);\n    var leap = InLeapYear(t);\n    if (mft === 0) {\n        return dwy + 1;\n    }\n    if (mft === 1) {\n        return dwy - 30;\n    }\n    if (mft === 2) {\n        return dwy - 58 - leap;\n    }\n    if (mft === 3) {\n        return dwy - 89 - leap;\n    }\n    if (mft === 4) {\n        return dwy - 119 - leap;\n    }\n    if (mft === 5) {\n        return dwy - 150 - leap;\n    }\n    if (mft === 6) {\n        return dwy - 180 - leap;\n    }\n    if (mft === 7) {\n        return dwy - 211 - leap;\n    }\n    if (mft === 8) {\n        return dwy - 242 - leap;\n    }\n    if (mft === 9) {\n        return dwy - 272 - leap;\n    }\n    if (mft === 10) {\n        return dwy - 303 - leap;\n    }\n    if (mft === 11) {\n        return dwy - 333 - leap;\n    }\n    throw new Error('Invalid time');\n}\nvar HOURS_PER_DAY = 24;\nvar MINUTES_PER_HOUR = 60;\nvar SECONDS_PER_MINUTE = 60;\nvar MS_PER_SECOND = 1e3;\nvar MS_PER_MINUTE = MS_PER_SECOND * SECONDS_PER_MINUTE;\nvar MS_PER_HOUR = MS_PER_MINUTE * MINUTES_PER_HOUR;\nexport function HourFromTime(t) {\n    return mod(Math.floor(t / MS_PER_HOUR), HOURS_PER_DAY);\n}\nexport function MinFromTime(t) {\n    return mod(Math.floor(t / MS_PER_MINUTE), MINUTES_PER_HOUR);\n}\nexport function SecFromTime(t) {\n    return mod(Math.floor(t / MS_PER_SECOND), SECONDS_PER_MINUTE);\n}\n","import { invariant } from '../utils';\nimport { Type, YearFromTime, WeekDay, MonthFromTime, DateFromTime, HourFromTime, MinFromTime, SecFromTime, } from '../262';\nfunction getApplicableZoneData(t, timeZone, tzData) {\n    var _a;\n    var zoneData = tzData[timeZone];\n    // We don't have data for this so just say it's UTC\n    if (!zoneData) {\n        return [0, false];\n    }\n    var i = 0;\n    var offset = 0;\n    var dst = false;\n    for (; i <= zoneData.length; i++) {\n        if (i === zoneData.length || zoneData[i][0] * 1e3 > t) {\n            _a = zoneData[i - 1], offset = _a[2], dst = _a[3];\n            break;\n        }\n    }\n    return [offset * 1e3, dst];\n}\n/**\n * https://tc39.es/ecma402/#sec-tolocaltime\n * @param t\n * @param calendar\n * @param timeZone\n */\nexport function ToLocalTime(t, calendar, timeZone, _a) {\n    var tzData = _a.tzData;\n    invariant(Type(t) === 'Number', 'invalid time');\n    invariant(calendar === 'gregory', 'We only support Gregory calendar right now');\n    var _b = getApplicableZoneData(t, timeZone, tzData), timeZoneOffset = _b[0], inDST = _b[1];\n    var tz = t + timeZoneOffset;\n    var year = YearFromTime(tz);\n    return {\n        weekday: WeekDay(tz),\n        era: year < 0 ? 'BC' : 'AD',\n        year: year,\n        relatedYear: undefined,\n        yearName: undefined,\n        month: MonthFromTime(tz),\n        day: DateFromTime(tz),\n        hour: HourFromTime(tz),\n        minute: MinFromTime(tz),\n        second: SecFromTime(tz),\n        inDST: inDST,\n        // IMPORTANT: Not in spec\n        timeZoneOffset: timeZoneOffset,\n    };\n}\n","import { DATE_TIME_PROPS } from './utils';\nimport { ToLocalTime } from './ToLocalTime';\nimport { TimeClip } from '../262';\nfunction pad(n) {\n    if (n < 10) {\n        return \"0\" + n;\n    }\n    return String(n);\n}\nfunction offsetToGmtString(gmtFormat, hourFormat, offsetInMs, style) {\n    var offsetInMinutes = Math.floor(offsetInMs / 60000);\n    var mins = Math.abs(offsetInMinutes) % 60;\n    var hours = Math.floor(Math.abs(offsetInMinutes) / 60);\n    var _a = hourFormat.split(';'), positivePattern = _a[0], negativePattern = _a[1];\n    var offsetStr = '';\n    var pattern = offsetInMs < 0 ? negativePattern : positivePattern;\n    if (style === 'long') {\n        offsetStr = pattern\n            .replace('HH', pad(hours))\n            .replace('H', String(hours))\n            .replace('mm', pad(mins))\n            .replace('m', String(mins));\n    }\n    else if (mins || hours) {\n        if (!mins) {\n            pattern = pattern.replace(/:?m+/, '');\n        }\n        offsetStr = pattern\n            .replace(/H+/, String(hours))\n            .replace(/m+/, String(mins));\n    }\n    return gmtFormat.replace('{0}', offsetStr);\n}\n/**\n * https://tc39.es/ecma402/#sec-partitiondatetimepattern\n * @param dtf\n * @param x\n */\nexport function FormatDateTimePattern(dtf, patternParts, x, _a) {\n    var getInternalSlots = _a.getInternalSlots, localeData = _a.localeData, getDefaultTimeZone = _a.getDefaultTimeZone, tzData = _a.tzData;\n    x = TimeClip(x);\n    /** IMPL START */\n    var internalSlots = getInternalSlots(dtf);\n    var dataLocale = internalSlots.dataLocale;\n    var dataLocaleData = localeData[dataLocale];\n    /** IMPL END */\n    var locale = internalSlots.locale;\n    var nfOptions = Object.create(null);\n    nfOptions.useGrouping = false;\n    var nf = new Intl.NumberFormat(locale, nfOptions);\n    var nf2Options = Object.create(null);\n    nf2Options.minimumIntegerDigits = 2;\n    nf2Options.useGrouping = false;\n    var nf2 = new Intl.NumberFormat(locale, nf2Options);\n    var tm = ToLocalTime(x, \n    // @ts-ignore\n    internalSlots.calendar, internalSlots.timeZone, { tzData: tzData });\n    var result = [];\n    for (var _i = 0, patternParts_1 = patternParts; _i < patternParts_1.length; _i++) {\n        var patternPart = patternParts_1[_i];\n        var p = patternPart.type;\n        if (p === 'literal') {\n            result.push({\n                type: 'literal',\n                value: patternPart.value,\n            });\n        }\n        else if (DATE_TIME_PROPS.indexOf(p) > -1) {\n            var fv = '';\n            var f = internalSlots[p];\n            // @ts-ignore\n            var v = tm[p];\n            if (p === 'year' && v <= 0) {\n                v = 1 - v;\n            }\n            if (p === 'month') {\n                v++;\n            }\n            var hourCycle = internalSlots.hourCycle;\n            if (p === 'hour' && (hourCycle === 'h11' || hourCycle === 'h12')) {\n                v = v % 12;\n                if (v === 0 && hourCycle === 'h12') {\n                    v = 12;\n                }\n            }\n            if (p === 'hour' && hourCycle === 'h24') {\n                if (v === 0) {\n                    v = 24;\n                }\n            }\n            if (f === 'numeric') {\n                fv = nf.format(v);\n            }\n            else if (f === '2-digit') {\n                fv = nf2.format(v);\n                if (fv.length > 2) {\n                    fv = fv.slice(fv.length - 2, fv.length);\n                }\n            }\n            else if (f === 'narrow' || f === 'short' || f === 'long') {\n                if (p === 'era') {\n                    fv = dataLocaleData[p][f][v];\n                }\n                else if (p === 'timeZoneName') {\n                    var timeZoneName = dataLocaleData.timeZoneName, gmtFormat = dataLocaleData.gmtFormat, hourFormat = dataLocaleData.hourFormat;\n                    var timeZone = internalSlots.timeZone || getDefaultTimeZone();\n                    var timeZoneData = timeZoneName[timeZone];\n                    if (timeZoneData && timeZoneData[f]) {\n                        fv = timeZoneData[f][+tm.inDST];\n                    }\n                    else {\n                        // Fallback to gmtFormat\n                        fv = offsetToGmtString(gmtFormat, hourFormat, tm.timeZoneOffset, f);\n                    }\n                }\n                else if (p === 'month') {\n                    fv = dataLocaleData.month[f][v - 1];\n                }\n                else {\n                    fv = dataLocaleData[p][f][v];\n                }\n            }\n            result.push({\n                type: p,\n                value: fv,\n            });\n        }\n        else if (p === 'ampm') {\n            var v = tm.hour;\n            var fv = void 0;\n            if (v > 11) {\n                fv = dataLocaleData.pm;\n            }\n            else {\n                fv = dataLocaleData.am;\n            }\n            result.push({\n                type: 'dayPeriod',\n                value: fv,\n            });\n        }\n        else if (p === 'relatedYear') {\n            var v = tm.relatedYear;\n            // @ts-ignore\n            var fv = nf.format(v);\n            result.push({\n                // @ts-ignore TODO: Fix TS type\n                type: 'relatedYear',\n                value: fv,\n            });\n        }\n        else if (p === 'yearName') {\n            var v = tm.yearName;\n            // @ts-ignore\n            var fv = nf.format(v);\n            result.push({\n                // @ts-ignore TODO: Fix TS type\n                type: 'yearName',\n                value: fv,\n            });\n        }\n    }\n    return result;\n}\n","import { invariant } from './utils';\n/**\n * https://tc39.es/ecma402/#sec-partitionpattern\n * @param pattern\n */\nexport function PartitionPattern(pattern) {\n    var result = [];\n    var beginIndex = pattern.indexOf('{');\n    var endIndex = 0;\n    var nextIndex = 0;\n    var length = pattern.length;\n    while (beginIndex < pattern.length && beginIndex > -1) {\n        endIndex = pattern.indexOf('}', beginIndex);\n        invariant(endIndex > beginIndex, \"Invalid pattern \" + pattern);\n        if (beginIndex > nextIndex) {\n            result.push({\n                type: 'literal',\n                value: pattern.substring(nextIndex, beginIndex),\n            });\n        }\n        result.push({\n            type: pattern.substring(beginIndex + 1, endIndex),\n            value: undefined,\n        });\n        nextIndex = endIndex + 1;\n        beginIndex = pattern.indexOf('{', nextIndex);\n    }\n    if (nextIndex < length) {\n        result.push({\n            type: 'literal',\n            value: pattern.substring(nextIndex, length),\n        });\n    }\n    return result;\n}\n","import { TimeClip } from '../262';\nimport { FormatDateTimePattern, } from './FormatDateTimePattern';\nimport { PartitionPattern } from '../PartitionPattern';\n/**\n * https://tc39.es/ecma402/#sec-partitiondatetimepattern\n * @param dtf\n * @param x\n */\nexport function PartitionDateTimePattern(dtf, x, implDetails) {\n    x = TimeClip(x);\n    if (isNaN(x)) {\n        throw new RangeError('invalid time');\n    }\n    /** IMPL START */\n    var getInternalSlots = implDetails.getInternalSlots;\n    var internalSlots = getInternalSlots(dtf);\n    /** IMPL END */\n    var pattern = internalSlots.pattern;\n    return FormatDateTimePattern(dtf, PartitionPattern(pattern), x, implDetails);\n}\n","import { PartitionDateTimePattern } from './PartitionDateTimePattern';\n/**\n * https://tc39.es/ecma402/#sec-formatdatetime\n * @param dtf DateTimeFormat\n * @param x\n */\nexport function FormatDateTime(dtf, x, implDetails) {\n    var parts = PartitionDateTimePattern(dtf, x, implDetails);\n    var result = '';\n    for (var _i = 0, parts_1 = parts; _i < parts_1.length; _i++) {\n        var part = parts_1[_i];\n        result += part.value;\n    }\n    return result;\n}\n","import { SameValue, TimeClip } from '../262';\nimport { ToLocalTime } from './ToLocalTime';\nimport { FormatDateTimePattern, } from './FormatDateTimePattern';\nimport { PartitionPattern } from '../PartitionPattern';\nvar TABLE_2_FIELDS = [\n    'era',\n    'year',\n    'month',\n    'day',\n    'ampm',\n    'hour',\n    'minute',\n    'second',\n];\nexport function PartitionDateTimeRangePattern(dtf, x, y, implDetails) {\n    x = TimeClip(x);\n    if (isNaN(x)) {\n        throw new RangeError('Invalid start time');\n    }\n    y = TimeClip(y);\n    if (isNaN(y)) {\n        throw new RangeError('Invalid end time');\n    }\n    /** IMPL START */\n    var getInternalSlots = implDetails.getInternalSlots, tzData = implDetails.tzData;\n    var internalSlots = getInternalSlots(dtf);\n    /** IMPL END */\n    var tm1 = ToLocalTime(x, \n    // @ts-ignore\n    internalSlots.calendar, internalSlots.timeZone, { tzData: tzData });\n    var tm2 = ToLocalTime(y, \n    // @ts-ignore\n    internalSlots.calendar, internalSlots.timeZone, { tzData: tzData });\n    var pattern = internalSlots.pattern, rangePatterns = internalSlots.rangePatterns;\n    var rangePattern;\n    var dateFieldsPracticallyEqual = true;\n    var patternContainsLargerDateField = false;\n    for (var _i = 0, TABLE_2_FIELDS_1 = TABLE_2_FIELDS; _i < TABLE_2_FIELDS_1.length; _i++) {\n        var fieldName = TABLE_2_FIELDS_1[_i];\n        if (dateFieldsPracticallyEqual && !patternContainsLargerDateField) {\n            if (fieldName === 'ampm') {\n                var v1 = tm1.hour;\n                var v2 = tm2.hour;\n                var rp = rangePatterns.ampm;\n                if ((v1 > 11 && v2 < 11) || (v1 < 11 && v2 > 11)) {\n                    dateFieldsPracticallyEqual = false;\n                }\n                if (rangePattern !== undefined && rp === undefined) {\n                    patternContainsLargerDateField = true;\n                }\n                rangePattern = rp;\n            }\n            else {\n                var v1 = tm1[fieldName];\n                var v2 = tm2[fieldName];\n                var rp = rangePatterns[fieldName];\n                if (!SameValue(v1, v2)) {\n                    dateFieldsPracticallyEqual = false;\n                }\n                if (rangePattern !== undefined && rp === undefined) {\n                    patternContainsLargerDateField = true;\n                }\n                rangePattern = rp;\n            }\n        }\n    }\n    if (dateFieldsPracticallyEqual) {\n        var result_2 = FormatDateTimePattern(dtf, PartitionPattern(pattern), x, implDetails);\n        for (var _a = 0, result_1 = result_2; _a < result_1.length; _a++) {\n            var r = result_1[_a];\n            r.source = \"shared\" /* shared */;\n        }\n        return result_2;\n    }\n    var result = [];\n    if (rangePattern === undefined) {\n        rangePattern = rangePatterns.default;\n    }\n    for (var _b = 0, _c = rangePattern.patternParts; _b < _c.length; _b++) {\n        var rangePatternPart = _c[_b];\n        var source = rangePatternPart.source, pattern_1 = rangePatternPart.pattern;\n        var z = void 0;\n        if (source === \"startRange\" /* startRange */ ||\n            source === \"shared\" /* shared */) {\n            z = x;\n        }\n        else {\n            z = y;\n        }\n        var patternParts = PartitionPattern(pattern_1);\n        var partResult = FormatDateTimePattern(dtf, patternParts, z, implDetails);\n        for (var _d = 0, partResult_1 = partResult; _d < partResult_1.length; _d++) {\n            var r = partResult_1[_d];\n            r.source = source;\n        }\n        result = result.concat(partResult);\n    }\n    return result;\n}\n","import { PartitionDateTimeRangePattern } from './PartitionDateTimeRangePattern';\nexport function FormatDateTimeRange(dtf, x, y, implDetails) {\n    var parts = PartitionDateTimeRangePattern(dtf, x, y, implDetails);\n    var result = '';\n    for (var _i = 0, parts_1 = parts; _i < parts_1.length; _i++) {\n        var part = parts_1[_i];\n        result += part.value;\n    }\n    return result;\n}\n","import { PartitionDateTimeRangePattern } from './PartitionDateTimeRangePattern';\nexport function FormatDateTimeRangeToParts(dtf, x, y, implDetails) {\n    var parts = PartitionDateTimeRangePattern(dtf, x, y, implDetails);\n    var result = new Array(0);\n    for (var _i = 0, parts_1 = parts; _i < parts_1.length; _i++) {\n        var part = parts_1[_i];\n        result.push({\n            type: part.type,\n            value: part.value,\n            source: part.source,\n        });\n    }\n    return result;\n}\n","import { PartitionDateTimePattern } from './PartitionDateTimePattern';\nimport { ArrayCreate } from '../262';\n/**\n * https://tc39.es/ecma402/#sec-formatdatetimetoparts\n *\n * @param dtf\n * @param x\n * @param implDetails\n */\nexport function FormatDateTimeToParts(dtf, x, implDetails) {\n    var parts = PartitionDateTimePattern(dtf, x, implDetails);\n    var result = ArrayCreate(0);\n    for (var _i = 0, parts_1 = parts; _i < parts_1.length; _i++) {\n        var part = parts_1[_i];\n        result.push({\n            type: part.type,\n            value: part.value,\n        });\n    }\n    return result;\n}\n","import { ToObject } from '../262';\n/**\n * https://tc39.es/ecma402/#sec-todatetimeoptions\n * @param options\n * @param required\n * @param defaults\n */\nexport function ToDateTimeOptions(options, required, defaults) {\n    if (options === undefined) {\n        options = null;\n    }\n    else {\n        options = ToObject(options);\n    }\n    options = Object.create(options);\n    var needDefaults = true;\n    if (required === 'date' || required === 'any') {\n        for (var _i = 0, _a = ['weekday', 'year', 'month', 'day']; _i < _a.length; _i++) {\n            var prop = _a[_i];\n            var value = options[prop];\n            if (value !== undefined) {\n                needDefaults = false;\n            }\n        }\n    }\n    if (required === 'time' || required === 'any') {\n        for (var _b = 0, _c = ['hour', 'minute', 'second']; _b < _c.length; _b++) {\n            var prop = _c[_b];\n            var value = options[prop];\n            if (value !== undefined) {\n                needDefaults = false;\n            }\n        }\n    }\n    if (options.dateStyle !== undefined || options.timeStyle !== undefined) {\n        needDefaults = false;\n    }\n    if (required === 'date' && options.timeStyle) {\n        throw new TypeError('Intl.DateTimeFormat date was required but timeStyle was included');\n    }\n    if (required === 'time' && options.dateStyle) {\n        throw new TypeError('Intl.DateTimeFormat time was required but dateStyle was included');\n    }\n    if (needDefaults && (defaults === 'date' || defaults === 'all')) {\n        for (var _d = 0, _e = ['year', 'month', 'day']; _d < _e.length; _d++) {\n            var prop = _e[_d];\n            options[prop] = 'numeric';\n        }\n    }\n    if (needDefaults && (defaults === 'time' || defaults === 'all')) {\n        for (var _f = 0, _g = ['hour', 'minute', 'second']; _f < _g.length; _f++) {\n            var prop = _g[_f];\n            options[prop] = 'numeric';\n        }\n    }\n    return options;\n}\n","import { ToString } from './262';\n/**\n * https://tc39.es/ecma402/#sec-getoption\n * @param opts\n * @param prop\n * @param type\n * @param values\n * @param fallback\n */\nexport function GetOption(opts, prop, type, values, fallback) {\n    // const descriptor = Object.getOwnPropertyDescriptor(opts, prop);\n    var value = opts[prop];\n    if (value !== undefined) {\n        if (type !== 'boolean' && type !== 'string') {\n            throw new TypeError('invalid type');\n        }\n        if (type === 'boolean') {\n            value = Boolean(value);\n        }\n        if (type === 'string') {\n            value = ToString(value);\n        }\n        if (values !== undefined && !values.filter(function (val) { return val == value; }).length) {\n            throw new RangeError(value + \" is not within \" + values.join(', '));\n        }\n        return value;\n    }\n    return fallback;\n}\n","/**\n * https://tc39.es/ecma402/#sec-bestavailablelocale\n * @param availableLocales\n * @param locale\n */\nexport function BestAvailableLocale(availableLocales, locale) {\n    var candidate = locale;\n    while (true) {\n        if (~availableLocales.indexOf(candidate)) {\n            return candidate;\n        }\n        var pos = candidate.lastIndexOf('-');\n        if (!~pos) {\n            return undefined;\n        }\n        if (pos >= 2 && candidate[pos - 2] === '-') {\n            pos -= 2;\n        }\n        candidate = candidate.slice(0, pos);\n    }\n}\n","import { invariant } from './utils';\n/**\n * https://tc39.es/ecma402/#sec-unicodeextensionvalue\n * @param extension\n * @param key\n */\nexport function UnicodeExtensionValue(extension, key) {\n    invariant(key.length === 2, 'key must have 2 elements');\n    var size = extension.length;\n    var searchValue = \"-\" + key + \"-\";\n    var pos = extension.indexOf(searchValue);\n    if (pos !== -1) {\n        var start = pos + 4;\n        var end = start;\n        var k = start;\n        var done = false;\n        while (!done) {\n            var e = extension.indexOf('-', k);\n            var len = void 0;\n            if (e === -1) {\n                len = size - k;\n            }\n            else {\n                len = e - k;\n            }\n            if (len === 2) {\n                done = true;\n            }\n            else if (e === -1) {\n                end = size;\n                done = true;\n            }\n            else {\n                end = e;\n                k = e + 1;\n            }\n        }\n        return extension.slice(start, end);\n    }\n    searchValue = \"-\" + key;\n    pos = extension.indexOf(searchValue);\n    if (pos !== -1 && pos + 3 === size) {\n        return '';\n    }\n    return undefined;\n}\n","import { LookupMatcher } from './LookupMatcher';\nimport { BestFitMatcher } from './BestFitMatcher';\nimport { invariant } from './utils';\nimport { UnicodeExtensionValue } from './UnicodeExtensionValue';\n/**\n * https://tc39.es/ecma402/#sec-resolvelocale\n */\nexport function ResolveLocale(availableLocales, requestedLocales, options, relevantExtensionKeys, localeData, getDefaultLocale) {\n    var matcher = options.localeMatcher;\n    var r;\n    if (matcher === 'lookup') {\n        r = LookupMatcher(availableLocales, requestedLocales, getDefaultLocale);\n    }\n    else {\n        r = BestFitMatcher(availableLocales, requestedLocales, getDefaultLocale);\n    }\n    var foundLocale = r.locale;\n    var result = { locale: '', dataLocale: foundLocale };\n    var supportedExtension = '-u';\n    for (var _i = 0, relevantExtensionKeys_1 = relevantExtensionKeys; _i < relevantExtensionKeys_1.length; _i++) {\n        var key = relevantExtensionKeys_1[_i];\n        invariant(foundLocale in localeData, \"Missing locale data for \" + foundLocale);\n        var foundLocaleData = localeData[foundLocale];\n        invariant(typeof foundLocaleData === 'object' && foundLocaleData !== null, \"locale data \" + key + \" must be an object\");\n        var keyLocaleData = foundLocaleData[key];\n        invariant(Array.isArray(keyLocaleData), \"keyLocaleData for \" + key + \" must be an array\");\n        var value = keyLocaleData[0];\n        invariant(typeof value === 'string' || value === null, \"value must be string or null but got \" + typeof value + \" in key \" + key);\n        var supportedExtensionAddition = '';\n        if (r.extension) {\n            var requestedValue = UnicodeExtensionValue(r.extension, key);\n            if (requestedValue !== undefined) {\n                if (requestedValue !== '') {\n                    if (~keyLocaleData.indexOf(requestedValue)) {\n                        value = requestedValue;\n                        supportedExtensionAddition = \"-\" + key + \"-\" + value;\n                    }\n                }\n                else if (~requestedValue.indexOf('true')) {\n                    value = 'true';\n                    supportedExtensionAddition = \"-\" + key;\n                }\n            }\n        }\n        if (key in options) {\n            var optionsValue = options[key];\n            invariant(typeof optionsValue === 'string' ||\n                typeof optionsValue === 'undefined' ||\n                optionsValue === null, 'optionsValue must be String, Undefined or Null');\n            if (~keyLocaleData.indexOf(optionsValue)) {\n                if (optionsValue !== value) {\n                    value = optionsValue;\n                    supportedExtensionAddition = '';\n                }\n            }\n        }\n        result[key] = value;\n        supportedExtension += supportedExtensionAddition;\n    }\n    if (supportedExtension.length > 2) {\n        var privateIndex = foundLocale.indexOf('-x-');\n        if (privateIndex === -1) {\n            foundLocale = foundLocale + supportedExtension;\n        }\n        else {\n            var preExtension = foundLocale.slice(0, privateIndex);\n            var postExtension = foundLocale.slice(privateIndex, foundLocale.length);\n            foundLocale = preExtension + supportedExtension + postExtension;\n        }\n        foundLocale = Intl.getCanonicalLocales(foundLocale)[0];\n    }\n    result.locale = foundLocale;\n    return result;\n}\n","import { UNICODE_EXTENSION_SEQUENCE_REGEX } from './utils';\nimport { BestAvailableLocale } from './BestAvailableLocale';\n/**\n * https://tc39.es/ecma402/#sec-lookupmatcher\n * @param availableLocales\n * @param requestedLocales\n * @param getDefaultLocale\n */\nexport function LookupMatcher(availableLocales, requestedLocales, getDefaultLocale) {\n    var result = { locale: '' };\n    for (var _i = 0, requestedLocales_1 = requestedLocales; _i < requestedLocales_1.length; _i++) {\n        var locale = requestedLocales_1[_i];\n        var noExtensionLocale = locale.replace(UNICODE_EXTENSION_SEQUENCE_REGEX, '');\n        var availableLocale = BestAvailableLocale(availableLocales, noExtensionLocale);\n        if (availableLocale) {\n            result.locale = availableLocale;\n            if (locale !== noExtensionLocale) {\n                result.extension = locale.slice(noExtensionLocale.length + 1, locale.length);\n            }\n            return result;\n        }\n    }\n    result.locale = getDefaultLocale();\n    return result;\n}\n","import { BestAvailableLocale } from './BestAvailableLocale';\nimport { UNICODE_EXTENSION_SEQUENCE_REGEX } from './utils';\n/**\n * https://tc39.es/ecma402/#sec-bestfitmatcher\n * @param availableLocales\n * @param requestedLocales\n * @param getDefaultLocale\n */\nexport function BestFitMatcher(availableLocales, requestedLocales, getDefaultLocale) {\n    var result = { locale: '' };\n    for (var _i = 0, requestedLocales_1 = requestedLocales; _i < requestedLocales_1.length; _i++) {\n        var locale = requestedLocales_1[_i];\n        var noExtensionLocale = locale.replace(UNICODE_EXTENSION_SEQUENCE_REGEX, '');\n        var availableLocale = BestAvailableLocale(availableLocales, noExtensionLocale);\n        if (availableLocale) {\n            result.locale = availableLocale;\n            if (locale !== noExtensionLocale) {\n                result.extension = locale.slice(noExtensionLocale.length + 1, locale.length);\n            }\n            return result;\n        }\n    }\n    result.locale = getDefaultLocale();\n    return result;\n}\n","/**\n * https://tc39.es/ecma402/#sec-isvalidtimezonename\n * @param tz\n * @param implDetails implementation details\n */\nexport function IsValidTimeZoneName(tz, _a) {\n    var tzData = _a.tzData, uppercaseLinks = _a.uppercaseLinks;\n    var uppercasedTz = tz.toUpperCase();\n    var zoneNames = new Set(Object.keys(tzData).map(function (z) { return z.toUpperCase(); }));\n    return zoneNames.has(uppercasedTz) || uppercasedTz in uppercaseLinks;\n}\n","import { CanonicalizeLocaleList } from '../CanonicalizeLocaleList';\nimport { ToDateTimeOptions } from './ToDateTimeOptions';\nimport { GetOption } from '../GetOption';\nimport { ResolveLocale } from '../ResolveLocale';\nimport { IsValidTimeZoneName } from '../IsValidTimeZoneName';\nimport { CanonicalizeTimeZoneName } from '../CanonicalizeTimeZoneName';\nimport { BasicFormatMatcher } from './BasicFormatMatcher';\nimport { BestFitFormatMatcher } from './BestFitFormatMatcher';\nimport { invariant } from '../utils';\nimport { DATE_TIME_PROPS } from './utils';\nimport { DateTimeStyleFormat } from './DateTimeStyleFormat';\nfunction isTimeRelated(opt) {\n    for (var _i = 0, _a = ['hour', 'minute', 'second']; _i < _a.length; _i++) {\n        var prop = _a[_i];\n        var value = opt[prop];\n        if (value !== undefined) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction resolveHourCycle(hc, hcDefault, hour12) {\n    if (hc == null) {\n        hc = hcDefault;\n    }\n    if (hour12 !== undefined) {\n        if (hour12) {\n            if (hcDefault === 'h11' || hcDefault === 'h23') {\n                hc = 'h11';\n            }\n            else {\n                hc = 'h12';\n            }\n        }\n        else {\n            invariant(!hour12, 'hour12 must not be set');\n            if (hcDefault === 'h11' || hcDefault === 'h23') {\n                hc = 'h23';\n            }\n            else {\n                hc = 'h24';\n            }\n        }\n    }\n    return hc;\n}\nvar TYPE_REGEX = /^[a-z0-9]{3,8}$/i;\n/**\n * https://tc39.es/ecma402/#sec-initializedatetimeformat\n * @param dtf DateTimeFormat\n * @param locales locales\n * @param opts options\n */\nexport function InitializeDateTimeFormat(dtf, locales, opts, _a) {\n    var getInternalSlots = _a.getInternalSlots, availableLocales = _a.availableLocales, localeData = _a.localeData, getDefaultLocale = _a.getDefaultLocale, getDefaultTimeZone = _a.getDefaultTimeZone, relevantExtensionKeys = _a.relevantExtensionKeys, tzData = _a.tzData, uppercaseLinks = _a.uppercaseLinks;\n    // @ts-ignore\n    var requestedLocales = CanonicalizeLocaleList(locales);\n    var options = ToDateTimeOptions(opts, 'any', 'date');\n    var opt = Object.create(null);\n    var matcher = GetOption(options, 'localeMatcher', 'string', ['lookup', 'best fit'], 'best fit');\n    opt.localeMatcher = matcher;\n    var calendar = GetOption(options, 'calendar', 'string', undefined, undefined);\n    if (calendar !== undefined && !TYPE_REGEX.test(calendar)) {\n        throw new RangeError('Malformed calendar');\n    }\n    var internalSlots = getInternalSlots(dtf);\n    opt.ca = calendar;\n    var numberingSystem = GetOption(options, 'numberingSystem', 'string', undefined, undefined);\n    if (numberingSystem !== undefined && !TYPE_REGEX.test(numberingSystem)) {\n        throw new RangeError('Malformed numbering system');\n    }\n    opt.nu = numberingSystem;\n    var hour12 = GetOption(options, 'hour12', 'boolean', undefined, undefined);\n    var hourCycle = GetOption(options, 'hourCycle', 'string', ['h11', 'h12', 'h23', 'h24'], undefined);\n    if (hour12 !== undefined) {\n        // @ts-ignore\n        hourCycle = null;\n    }\n    opt.hc = hourCycle;\n    var r = ResolveLocale(availableLocales, requestedLocales, opt, relevantExtensionKeys, localeData, getDefaultLocale);\n    internalSlots.locale = r.locale;\n    calendar = r.ca;\n    internalSlots.calendar = calendar;\n    internalSlots.hourCycle = r.hc;\n    internalSlots.numberingSystem = r.nu;\n    var dataLocale = r.dataLocale;\n    internalSlots.dataLocale = dataLocale;\n    var timeZone = options.timeZone;\n    if (timeZone !== undefined) {\n        timeZone = String(timeZone);\n        if (!IsValidTimeZoneName(timeZone, { tzData: tzData, uppercaseLinks: uppercaseLinks })) {\n            throw new RangeError('Invalid timeZoneName');\n        }\n        timeZone = CanonicalizeTimeZoneName(timeZone, { tzData: tzData, uppercaseLinks: uppercaseLinks });\n    }\n    else {\n        timeZone = getDefaultTimeZone();\n    }\n    internalSlots.timeZone = timeZone;\n    opt = Object.create(null);\n    opt.weekday = GetOption(options, 'weekday', 'string', ['narrow', 'short', 'long'], undefined);\n    opt.era = GetOption(options, 'era', 'string', ['narrow', 'short', 'long'], undefined);\n    opt.year = GetOption(options, 'year', 'string', ['2-digit', 'numeric'], undefined);\n    opt.month = GetOption(options, 'month', 'string', ['2-digit', 'numeric', 'narrow', 'short', 'long'], undefined);\n    opt.day = GetOption(options, 'day', 'string', ['2-digit', 'numeric'], undefined);\n    opt.hour = GetOption(options, 'hour', 'string', ['2-digit', 'numeric'], undefined);\n    opt.minute = GetOption(options, 'minute', 'string', ['2-digit', 'numeric'], undefined);\n    opt.second = GetOption(options, 'second', 'string', ['2-digit', 'numeric'], undefined);\n    opt.timeZoneName = GetOption(options, 'timeZoneName', 'string', ['short', 'long'], undefined);\n    var dataLocaleData = localeData[dataLocale];\n    invariant(!!dataLocaleData, \"Missing locale data for \" + dataLocale);\n    var formats = dataLocaleData.formats[calendar];\n    // UNSPECCED: IMPLEMENTATION DETAILS\n    if (!formats) {\n        throw new RangeError(\"Calendar \\\"\" + calendar + \"\\\" is not supported. Try setting \\\"calendar\\\" to 1 of the following: \" + Object.keys(dataLocaleData.formats).join(', '));\n    }\n    matcher = GetOption(options, 'formatMatcher', 'string', ['basic', 'best fit'], 'best fit');\n    var dateStyle = GetOption(options, 'dateStyle', 'string', ['full', 'long', 'medium', 'short'], undefined);\n    internalSlots.dateStyle = dateStyle;\n    var timeStyle = GetOption(options, 'timeStyle', 'string', ['full', 'long', 'medium', 'short'], undefined);\n    internalSlots.timeStyle = timeStyle;\n    var bestFormat;\n    if (dateStyle === undefined && timeStyle === undefined) {\n        if (matcher === 'basic') {\n            bestFormat = BasicFormatMatcher(opt, formats);\n        }\n        else {\n            // IMPL DETAILS START\n            if (isTimeRelated(opt)) {\n                var hc = resolveHourCycle(internalSlots.hourCycle, dataLocaleData.hourCycle, hour12);\n                opt.hour12 = hc === 'h11' || hc === 'h12';\n            }\n            // IMPL DETAILS END\n            bestFormat = BestFitFormatMatcher(opt, formats);\n        }\n    }\n    else {\n        for (var _i = 0, DATE_TIME_PROPS_1 = DATE_TIME_PROPS; _i < DATE_TIME_PROPS_1.length; _i++) {\n            var prop = DATE_TIME_PROPS_1[_i];\n            var p = opt[prop];\n            if (p !== undefined) {\n                throw new TypeError(\"Intl.DateTimeFormat can't set option \" + prop + \" when \" + (dateStyle ? 'dateStyle' : 'timeStyle') + \" is used\");\n            }\n        }\n        bestFormat = DateTimeStyleFormat(dateStyle, timeStyle, dataLocaleData);\n    }\n    // IMPL DETAIL START\n    // For debugging\n    internalSlots.format = bestFormat;\n    // IMPL DETAIL END\n    for (var prop in opt) {\n        var p = bestFormat[prop];\n        if (p !== undefined) {\n            internalSlots[prop] = p;\n        }\n    }\n    var pattern;\n    var rangePatterns;\n    if (internalSlots.hour !== undefined) {\n        var hc = resolveHourCycle(internalSlots.hourCycle, dataLocaleData.hourCycle, hour12);\n        internalSlots.hourCycle = hc;\n        if (hc === 'h11' || hc === 'h12') {\n            pattern = bestFormat.pattern12;\n            rangePatterns = bestFormat.rangePatterns12;\n        }\n        else {\n            pattern = bestFormat.pattern;\n            rangePatterns = bestFormat.rangePatterns;\n        }\n    }\n    else {\n        // @ts-ignore\n        internalSlots.hourCycle = undefined;\n        pattern = bestFormat.pattern;\n        rangePatterns = bestFormat.rangePatterns;\n    }\n    internalSlots.pattern = pattern;\n    internalSlots.rangePatterns = rangePatterns;\n    return dtf;\n}\n","/**\n * This follows https://tc39.es/ecma402/#sec-case-sensitivity-and-case-mapping\n * @param str string to convert\n */\nfunction toUpperCase(str) {\n    return str.replace(/([a-z])/g, function (_, c) { return c.toUpperCase(); });\n}\nvar NOT_A_Z_REGEX = /[^A-Z]/;\n/**\n * https://tc39.es/ecma402/#sec-iswellformedcurrencycode\n */\nexport function IsWellFormedCurrencyCode(currency) {\n    currency = toUpperCase(currency);\n    if (currency.length !== 3) {\n        return false;\n    }\n    if (NOT_A_Z_REGEX.test(currency)) {\n        return false;\n    }\n    return true;\n}\n","import { CanonicalizeLocaleList } from '../CanonicalizeLocaleList';\nimport { invariant } from '../utils';\nimport { IsWellFormedCurrencyCode } from '../IsWellFormedCurrencyCode';\nvar UNICODE_REGION_SUBTAG_REGEX = /^([a-z]{2}|[0-9]{3})$/i;\nvar ALPHA_4 = /^[a-z]{4}$/i;\nfunction isUnicodeRegionSubtag(region) {\n    return UNICODE_REGION_SUBTAG_REGEX.test(region);\n}\nfunction isUnicodeScriptSubtag(script) {\n    return ALPHA_4.test(script);\n}\nexport function CanonicalCodeForDisplayNames(type, code) {\n    if (type === 'language') {\n        return CanonicalizeLocaleList([code])[0];\n    }\n    if (type === 'region') {\n        if (!isUnicodeRegionSubtag(code)) {\n            throw RangeError('invalid region');\n        }\n        return code.toUpperCase();\n    }\n    if (type === 'script') {\n        if (!isUnicodeScriptSubtag(code)) {\n            throw RangeError('invalid script');\n        }\n        return \"\" + code[0].toUpperCase() + code.slice(1);\n    }\n    invariant(type === 'currency', 'invalid type');\n    if (!IsWellFormedCurrencyCode(code)) {\n        throw RangeError('invalid currency');\n    }\n    return code.toUpperCase();\n}\n","/**\n * https://tc39.es/ecma402/#sec-defaultnumberoption\n * @param val\n * @param min\n * @param max\n * @param fallback\n */\nexport function DefaultNumberOption(val, min, max, fallback) {\n    if (val !== undefined) {\n        val = Number(val);\n        if (isNaN(val) || val < min || val > max) {\n            throw new RangeError(val + \" is outside of range [\" + min + \", \" + max + \"]\");\n        }\n        return Math.floor(val);\n    }\n    return fallback;\n}\n","/**\n * https://tc39.es/ecma402/#sec-getnumberoption\n * @param options\n * @param property\n * @param min\n * @param max\n * @param fallback\n */\nimport { DefaultNumberOption } from './DefaultNumberOption';\nexport function GetNumberOption(options, property, minimum, maximum, fallback) {\n    var val = options[property];\n    return DefaultNumberOption(val, minimum, maximum, fallback);\n}\n","/**\n * https://tc39.es/ecma402/#table-sanctioned-simple-unit-identifiers\n */\nexport var SANCTIONED_UNITS = [\n    'angle-degree',\n    'area-acre',\n    'area-hectare',\n    'concentr-percent',\n    'digital-bit',\n    'digital-byte',\n    'digital-gigabit',\n    'digital-gigabyte',\n    'digital-kilobit',\n    'digital-kilobyte',\n    'digital-megabit',\n    'digital-megabyte',\n    'digital-petabyte',\n    'digital-terabit',\n    'digital-terabyte',\n    'duration-day',\n    'duration-hour',\n    'duration-millisecond',\n    'duration-minute',\n    'duration-month',\n    'duration-second',\n    'duration-week',\n    'duration-year',\n    'length-centimeter',\n    'length-foot',\n    'length-inch',\n    'length-kilometer',\n    'length-meter',\n    'length-mile-scandinavian',\n    'length-mile',\n    'length-millimeter',\n    'length-yard',\n    'mass-gram',\n    'mass-kilogram',\n    'mass-ounce',\n    'mass-pound',\n    'mass-stone',\n    'temperature-celsius',\n    'temperature-fahrenheit',\n    'volume-fluid-ounce',\n    'volume-gallon',\n    'volume-liter',\n    'volume-milliliter',\n];\n// In CLDR, the unit name always follows the form `namespace-unit` pattern.\n// For example: `digital-bit` instead of `bit`. This function removes the namespace prefix.\nexport function removeUnitNamespace(unit) {\n    return unit.slice(unit.indexOf('-') + 1);\n}\n/**\n * https://tc39.es/ecma402/#table-sanctioned-simple-unit-identifiers\n */\nexport var SIMPLE_UNITS = SANCTIONED_UNITS.map(removeUnitNamespace);\n/**\n * https://tc39.es/ecma402/#sec-issanctionedsimpleunitidentifier\n */\nexport function IsSanctionedSimpleUnitIdentifier(unitIdentifier) {\n    return SIMPLE_UNITS.indexOf(unitIdentifier) > -1;\n}\n","import { IsSanctionedSimpleUnitIdentifier } from './IsSanctionedSimpleUnitIdentifier';\n/**\n * This follows https://tc39.es/ecma402/#sec-case-sensitivity-and-case-mapping\n * @param str string to convert\n */\nfunction toLowerCase(str) {\n    return str.replace(/([A-Z])/g, function (_, c) { return c.toLowerCase(); });\n}\n/**\n * https://tc39.es/ecma402/#sec-iswellformedunitidentifier\n * @param unit\n */\nexport function IsWellFormedUnitIdentifier(unit) {\n    unit = toLowerCase(unit);\n    if (IsSanctionedSimpleUnitIdentifier(unit)) {\n        return true;\n    }\n    var units = unit.split('-per-');\n    if (units.length !== 2) {\n        return false;\n    }\n    var numerator = units[0], denominator = units[1];\n    if (!IsSanctionedSimpleUnitIdentifier(numerator) ||\n        !IsSanctionedSimpleUnitIdentifier(denominator)) {\n        return false;\n    }\n    return true;\n}\n","/**\n * The abstract operation ComputeExponentForMagnitude computes an exponent by which to scale a\n * number of the given magnitude (power of ten of the most significant digit) according to the\n * locale and the desired notation (scientific, engineering, or compact).\n */\nexport function ComputeExponentForMagnitude(numberFormat, magnitude, _a) {\n    var getInternalSlots = _a.getInternalSlots;\n    var internalSlots = getInternalSlots(numberFormat);\n    var notation = internalSlots.notation, dataLocaleData = internalSlots.dataLocaleData, numberingSystem = internalSlots.numberingSystem;\n    switch (notation) {\n        case 'standard':\n            return 0;\n        case 'scientific':\n            return magnitude;\n        case 'engineering':\n            return Math.floor(magnitude / 3) * 3;\n        default: {\n            // Let exponent be an implementation- and locale-dependent (ILD) integer by which to scale a\n            // number of the given magnitude in compact notation for the current locale.\n            var compactDisplay = internalSlots.compactDisplay, style = internalSlots.style, currencyDisplay = internalSlots.currencyDisplay;\n            var thresholdMap = void 0;\n            if (style === 'currency' && currencyDisplay !== 'name') {\n                var currency = dataLocaleData.numbers.currency[numberingSystem] ||\n                    dataLocaleData.numbers.currency[dataLocaleData.numbers.nu[0]];\n                thresholdMap = currency.short;\n            }\n            else {\n                var decimal = dataLocaleData.numbers.decimal[numberingSystem] ||\n                    dataLocaleData.numbers.decimal[dataLocaleData.numbers.nu[0]];\n                thresholdMap = compactDisplay === 'long' ? decimal.long : decimal.short;\n            }\n            if (!thresholdMap) {\n                return 0;\n            }\n            var num = String(Math.pow(10, magnitude));\n            var thresholds = Object.keys(thresholdMap); // TODO: this can be pre-processed\n            if (num < thresholds[0]) {\n                return 0;\n            }\n            if (num > thresholds[thresholds.length - 1]) {\n                return thresholds[thresholds.length - 1].length - 1;\n            }\n            var i = thresholds.indexOf(num);\n            if (i === -1) {\n                return 0;\n            }\n            // See https://unicode.org/reports/tr35/tr35-numbers.html#Compact_Number_Formats\n            // Special handling if the pattern is precisely `0`.\n            var magnitudeKey = thresholds[i];\n            // TODO: do we need to handle plural here?\n            var compactPattern = thresholdMap[magnitudeKey].other;\n            if (compactPattern === '0') {\n                return 0;\n            }\n            // Example: in zh-TW, `10000000` maps to `0000萬`. So we need to return 8 - 4 = 4 here.\n            return (magnitudeKey.length -\n                thresholdMap[magnitudeKey].other.match(/0+/)[0].length);\n        }\n    }\n}\n","import { repeat, getMagnitude } from '../utils';\nexport function ToRawPrecision(x, minPrecision, maxPrecision) {\n    var p = maxPrecision;\n    var m;\n    var e;\n    var xFinal;\n    if (x === 0) {\n        m = repeat('0', p);\n        e = 0;\n        xFinal = 0;\n    }\n    else {\n        var xToString = x.toString();\n        // If xToString is formatted as scientific notation, the number is either very small or very\n        // large. If the precision of the formatted string is lower that requested max precision, we\n        // should still infer them from the formatted string, otherwise the formatted result might have\n        // precision loss (e.g. 1e41 will not have 0 in every trailing digits).\n        var xToStringExponentIndex = xToString.indexOf('e');\n        var _a = xToString.split('e'), xToStringMantissa = _a[0], xToStringExponent = _a[1];\n        var xToStringMantissaWithoutDecimalPoint = xToStringMantissa.replace('.', '');\n        if (xToStringExponentIndex >= 0 &&\n            xToStringMantissaWithoutDecimalPoint.length <= p) {\n            e = +xToStringExponent;\n            m =\n                xToStringMantissaWithoutDecimalPoint +\n                    repeat('0', p - xToStringMantissaWithoutDecimalPoint.length);\n            xFinal = x;\n        }\n        else {\n            e = getMagnitude(x);\n            var decimalPlaceOffset = e - p + 1;\n            // n is the integer containing the required precision digits. To derive the formatted string,\n            // we will adjust its decimal place in the logic below.\n            var n = Math.round(adjustDecimalPlace(x, decimalPlaceOffset));\n            // The rounding caused the change of magnitude, so we should increment `e` by 1.\n            if (adjustDecimalPlace(n, p - 1) >= 10) {\n                e = e + 1;\n                // Divide n by 10 to swallow one precision.\n                n = Math.floor(n / 10);\n            }\n            m = n.toString();\n            // Equivalent of n * 10 ** (e - p + 1)\n            xFinal = adjustDecimalPlace(n, p - 1 - e);\n        }\n    }\n    var int;\n    if (e >= p - 1) {\n        m = m + repeat('0', e - p + 1);\n        int = e + 1;\n    }\n    else if (e >= 0) {\n        m = m.slice(0, e + 1) + \".\" + m.slice(e + 1);\n        int = e + 1;\n    }\n    else {\n        m = \"0.\" + repeat('0', -e - 1) + m;\n        int = 1;\n    }\n    if (m.indexOf('.') >= 0 && maxPrecision > minPrecision) {\n        var cut = maxPrecision - minPrecision;\n        while (cut > 0 && m[m.length - 1] === '0') {\n            m = m.slice(0, -1);\n            cut--;\n        }\n        if (m[m.length - 1] === '.') {\n            m = m.slice(0, -1);\n        }\n    }\n    return { formattedString: m, roundedNumber: xFinal, integerDigitsCount: int };\n    // x / (10 ** magnitude), but try to preserve as much floating point precision as possible.\n    function adjustDecimalPlace(x, magnitude) {\n        return magnitude < 0 ? x * Math.pow(10, -magnitude) : x / Math.pow(10, magnitude);\n    }\n}\n","import { repeat } from '../utils';\n/**\n * TODO: dedup with intl-pluralrules and support BigInt\n * https://tc39.es/ecma402/#sec-torawfixed\n * @param x a finite non-negative Number or BigInt\n * @param minFraction and integer between 0 and 20\n * @param maxFraction and integer between 0 and 20\n */\nexport function ToRawFixed(x, minFraction, maxFraction) {\n    var f = maxFraction;\n    var n = Math.round(x * Math.pow(10, f));\n    var xFinal = n / Math.pow(10, f);\n    // n is a positive integer, but it is possible to be greater than 1e21.\n    // In such case we will go the slow path.\n    // See also: https://tc39.es/ecma262/#sec-numeric-types-number-tostring\n    var m;\n    if (n < 1e21) {\n        m = n.toString();\n    }\n    else {\n        m = n.toString();\n        var _a = m.split('e'), mantissa = _a[0], exponent = _a[1];\n        m = mantissa.replace('.', '');\n        m = m + repeat('0', Math.max(+exponent - m.length + 1, 0));\n    }\n    var int;\n    if (f !== 0) {\n        var k = m.length;\n        if (k <= f) {\n            var z = repeat('0', f + 1 - k);\n            m = z + m;\n            k = f + 1;\n        }\n        var a = m.slice(0, k - f);\n        var b = m.slice(k - f);\n        m = a + \".\" + b;\n        int = a.length;\n    }\n    else {\n        int = m.length;\n    }\n    var cut = maxFraction - minFraction;\n    while (cut > 0 && m[m.length - 1] === '0') {\n        m = m.slice(0, -1);\n        cut--;\n    }\n    if (m[m.length - 1] === '.') {\n        m = m.slice(0, -1);\n    }\n    return { formattedString: m, roundedNumber: xFinal, integerDigitsCount: int };\n}\n","import { SameValue } from '../262';\nimport { ToRawPrecision } from './ToRawPrecision';\nimport { repeat } from '../utils';\nimport { ToRawFixed } from './ToRawFixed';\n/**\n * https://tc39.es/ecma402/#sec-formatnumberstring\n */\nexport function FormatNumericToString(intlObject, x) {\n    var isNegative = x < 0 || SameValue(x, -0);\n    if (isNegative) {\n        x = -x;\n    }\n    var result;\n    var rourndingType = intlObject.roundingType;\n    switch (rourndingType) {\n        case 'significantDigits':\n            result = ToRawPrecision(x, intlObject.minimumSignificantDigits, intlObject.maximumSignificantDigits);\n            break;\n        case 'fractionDigits':\n            result = ToRawFixed(x, intlObject.minimumFractionDigits, intlObject.maximumFractionDigits);\n            break;\n        default:\n            result = ToRawPrecision(x, 1, 2);\n            if (result.integerDigitsCount > 1) {\n                result = ToRawFixed(x, 0, 0);\n            }\n            break;\n    }\n    x = result.roundedNumber;\n    var string = result.formattedString;\n    var int = result.integerDigitsCount;\n    var minInteger = intlObject.minimumIntegerDigits;\n    if (int < minInteger) {\n        var forwardZeros = repeat('0', minInteger - int);\n        string = forwardZeros + string;\n    }\n    if (isNegative) {\n        x = -x;\n    }\n    return { roundedNumber: x, formattedString: string };\n}\n","import { getMagnitude } from '../utils';\nimport { ComputeExponentForMagnitude } from './ComputeExponentForMagnitude';\nimport { FormatNumericToString } from './FormatNumericToString';\n/**\n * The abstract operation ComputeExponent computes an exponent (power of ten) by which to scale x\n * according to the number formatting settings. It handles cases such as 999 rounding up to 1000,\n * requiring a different exponent.\n *\n * NOT IN SPEC: it returns [exponent, magnitude].\n */\nexport function ComputeExponent(numberFormat, x, _a) {\n    var getInternalSlots = _a.getInternalSlots;\n    if (x === 0) {\n        return [0, 0];\n    }\n    if (x < 0) {\n        x = -x;\n    }\n    var magnitude = getMagnitude(x);\n    var exponent = ComputeExponentForMagnitude(numberFormat, magnitude, {\n        getInternalSlots: getInternalSlots,\n    });\n    // Preserve more precision by doing multiplication when exponent is negative.\n    x = exponent < 0 ? x * Math.pow(10, -exponent) : x / Math.pow(10, exponent);\n    var formatNumberResult = FormatNumericToString(getInternalSlots(numberFormat), x);\n    if (formatNumberResult.roundedNumber === 0) {\n        return [exponent, magnitude];\n    }\n    var newMagnitude = getMagnitude(formatNumberResult.roundedNumber);\n    if (newMagnitude === magnitude - exponent) {\n        return [exponent, magnitude];\n    }\n    return [\n        ComputeExponentForMagnitude(numberFormat, magnitude + 1, {\n            getInternalSlots: getInternalSlots,\n        }),\n        magnitude + 1,\n    ];\n}\n","import { HasOwnProperty } from '../262';\n/**\n * https://tc39.es/ecma402/#sec-currencydigits\n */\nexport function CurrencyDigits(c, _a) {\n    var currencyDigitsData = _a.currencyDigitsData;\n    return HasOwnProperty(currencyDigitsData, c)\n        ? currencyDigitsData[c]\n        : 2;\n}\n","import { ToRawFixed } from './ToRawFixed';\nimport * as digitMapping from './digit-mapping.json';\n// This is from: unicode-12.1.0/General_Category/Symbol/regex.js\n// IE11 does not support unicode flag, otherwise this is just /\\p{S}/u.\nvar S_UNICODE_REGEX = /[\\$\\+<->\\^`\\|~\\xA2-\\xA6\\xA8\\xA9\\xAC\\xAE-\\xB1\\xB4\\xB8\\xD7\\xF7\\u02C2-\\u02C5\\u02D2-\\u02DF\\u02E5-\\u02EB\\u02ED\\u02EF-\\u02FF\\u0375\\u0384\\u0385\\u03F6\\u0482\\u058D-\\u058F\\u0606-\\u0608\\u060B\\u060E\\u060F\\u06DE\\u06E9\\u06FD\\u06FE\\u07F6\\u07FE\\u07FF\\u09F2\\u09F3\\u09FA\\u09FB\\u0AF1\\u0B70\\u0BF3-\\u0BFA\\u0C7F\\u0D4F\\u0D79\\u0E3F\\u0F01-\\u0F03\\u0F13\\u0F15-\\u0F17\\u0F1A-\\u0F1F\\u0F34\\u0F36\\u0F38\\u0FBE-\\u0FC5\\u0FC7-\\u0FCC\\u0FCE\\u0FCF\\u0FD5-\\u0FD8\\u109E\\u109F\\u1390-\\u1399\\u166D\\u17DB\\u1940\\u19DE-\\u19FF\\u1B61-\\u1B6A\\u1B74-\\u1B7C\\u1FBD\\u1FBF-\\u1FC1\\u1FCD-\\u1FCF\\u1FDD-\\u1FDF\\u1FED-\\u1FEF\\u1FFD\\u1FFE\\u2044\\u2052\\u207A-\\u207C\\u208A-\\u208C\\u20A0-\\u20BF\\u2100\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116-\\u2118\\u211E-\\u2123\\u2125\\u2127\\u2129\\u212E\\u213A\\u213B\\u2140-\\u2144\\u214A-\\u214D\\u214F\\u218A\\u218B\\u2190-\\u2307\\u230C-\\u2328\\u232B-\\u2426\\u2440-\\u244A\\u249C-\\u24E9\\u2500-\\u2767\\u2794-\\u27C4\\u27C7-\\u27E5\\u27F0-\\u2982\\u2999-\\u29D7\\u29DC-\\u29FB\\u29FE-\\u2B73\\u2B76-\\u2B95\\u2B98-\\u2BFF\\u2CE5-\\u2CEA\\u2E80-\\u2E99\\u2E9B-\\u2EF3\\u2F00-\\u2FD5\\u2FF0-\\u2FFB\\u3004\\u3012\\u3013\\u3020\\u3036\\u3037\\u303E\\u303F\\u309B\\u309C\\u3190\\u3191\\u3196-\\u319F\\u31C0-\\u31E3\\u3200-\\u321E\\u322A-\\u3247\\u3250\\u3260-\\u327F\\u328A-\\u32B0\\u32C0-\\u33FF\\u4DC0-\\u4DFF\\uA490-\\uA4C6\\uA700-\\uA716\\uA720\\uA721\\uA789\\uA78A\\uA828-\\uA82B\\uA836-\\uA839\\uAA77-\\uAA79\\uAB5B\\uFB29\\uFBB2-\\uFBC1\\uFDFC\\uFDFD\\uFE62\\uFE64-\\uFE66\\uFE69\\uFF04\\uFF0B\\uFF1C-\\uFF1E\\uFF3E\\uFF40\\uFF5C\\uFF5E\\uFFE0-\\uFFE6\\uFFE8-\\uFFEE\\uFFFC\\uFFFD]|\\uD800[\\uDD37-\\uDD3F\\uDD79-\\uDD89\\uDD8C-\\uDD8E\\uDD90-\\uDD9B\\uDDA0\\uDDD0-\\uDDFC]|\\uD802[\\uDC77\\uDC78\\uDEC8]|\\uD805\\uDF3F|\\uD807[\\uDFD5-\\uDFF1]|\\uD81A[\\uDF3C-\\uDF3F\\uDF45]|\\uD82F\\uDC9C|\\uD834[\\uDC00-\\uDCF5\\uDD00-\\uDD26\\uDD29-\\uDD64\\uDD6A-\\uDD6C\\uDD83\\uDD84\\uDD8C-\\uDDA9\\uDDAE-\\uDDE8\\uDE00-\\uDE41\\uDE45\\uDF00-\\uDF56]|\\uD835[\\uDEC1\\uDEDB\\uDEFB\\uDF15\\uDF35\\uDF4F\\uDF6F\\uDF89\\uDFA9\\uDFC3]|\\uD836[\\uDC00-\\uDDFF\\uDE37-\\uDE3A\\uDE6D-\\uDE74\\uDE76-\\uDE83\\uDE85\\uDE86]|\\uD838[\\uDD4F\\uDEFF]|\\uD83B[\\uDCAC\\uDCB0\\uDD2E\\uDEF0\\uDEF1]|\\uD83C[\\uDC00-\\uDC2B\\uDC30-\\uDC93\\uDCA0-\\uDCAE\\uDCB1-\\uDCBF\\uDCC1-\\uDCCF\\uDCD1-\\uDCF5\\uDD10-\\uDD6C\\uDD70-\\uDDAC\\uDDE6-\\uDE02\\uDE10-\\uDE3B\\uDE40-\\uDE48\\uDE50\\uDE51\\uDE60-\\uDE65\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDED5\\uDEE0-\\uDEEC\\uDEF0-\\uDEFA\\uDF00-\\uDF73\\uDF80-\\uDFD8\\uDFE0-\\uDFEB]|\\uD83E[\\uDC00-\\uDC0B\\uDC10-\\uDC47\\uDC50-\\uDC59\\uDC60-\\uDC87\\uDC90-\\uDCAD\\uDD00-\\uDD0B\\uDD0D-\\uDD71\\uDD73-\\uDD76\\uDD7A-\\uDDA2\\uDDA5-\\uDDAA\\uDDAE-\\uDDCA\\uDDCD-\\uDE53\\uDE60-\\uDE6D\\uDE70-\\uDE73\\uDE78-\\uDE7A\\uDE80-\\uDE82\\uDE90-\\uDE95]/;\n// /^\\p{S}/u\nvar CARET_S_UNICODE_REGEX = new RegExp(\"^\" + S_UNICODE_REGEX.source);\n// /\\p{S}$/u\nvar S_DOLLAR_UNICODE_REGEX = new RegExp(S_UNICODE_REGEX.source + \"$\");\nvar CLDR_NUMBER_PATTERN = /[#0](?:[\\.,][#0]+)*/g;\nexport default function formatToParts(numberResult, data, pl, options) {\n    var sign = numberResult.sign, exponent = numberResult.exponent, magnitude = numberResult.magnitude;\n    var notation = options.notation, style = options.style, numberingSystem = options.numberingSystem;\n    var defaultNumberingSystem = data.numbers.nu[0];\n    // #region Part 1: partition and interpolate the CLDR number pattern.\n    // ----------------------------------------------------------\n    var compactNumberPattern = null;\n    if (notation === 'compact' && magnitude) {\n        compactNumberPattern = getCompactDisplayPattern(numberResult, pl, data, style, options.compactDisplay, options.currencyDisplay, numberingSystem);\n    }\n    // This is used multiple times\n    var nonNameCurrencyPart;\n    if (style === 'currency' && options.currencyDisplay !== 'name') {\n        var byCurrencyDisplay = data.currencies[options.currency];\n        if (byCurrencyDisplay) {\n            switch (options.currencyDisplay) {\n                case 'code':\n                    nonNameCurrencyPart = options.currency;\n                    break;\n                case 'symbol':\n                    nonNameCurrencyPart = byCurrencyDisplay.symbol;\n                    break;\n                default:\n                    nonNameCurrencyPart = byCurrencyDisplay.narrow;\n                    break;\n            }\n        }\n        else {\n            // Fallback for unknown currency\n            nonNameCurrencyPart = options.currency;\n        }\n    }\n    var numberPattern;\n    if (!compactNumberPattern) {\n        // Note: if the style is unit, or is currency and the currency display is name,\n        // its unit parts will be interpolated in part 2. So here we can fallback to decimal.\n        if (style === 'decimal' ||\n            style === 'unit' ||\n            (style === 'currency' && options.currencyDisplay === 'name')) {\n            // Shortcut for decimal\n            var decimalData = data.numbers.decimal[numberingSystem] ||\n                data.numbers.decimal[defaultNumberingSystem];\n            numberPattern = getPatternForSign(decimalData.standard, sign);\n        }\n        else if (style === 'currency') {\n            var currencyData = data.numbers.currency[numberingSystem] ||\n                data.numbers.currency[defaultNumberingSystem];\n            // We replace number pattern part with `0` for easier postprocessing.\n            numberPattern = getPatternForSign(currencyData[options.currencySign], sign);\n        }\n        else {\n            // percent\n            var percentPattern = data.numbers.percent[numberingSystem] ||\n                data.numbers.percent[defaultNumberingSystem];\n            numberPattern = getPatternForSign(percentPattern, sign);\n        }\n    }\n    else {\n        numberPattern = compactNumberPattern;\n    }\n    // Extract the decimal number pattern string. It looks like \"#,##0,00\", which will later be\n    // used to infer decimal group sizes.\n    var decimalNumberPattern = CLDR_NUMBER_PATTERN.exec(numberPattern)[0];\n    // Now we start to substitute patterns\n    // 1. replace strings like `0` and `#,##0.00` with `{0}`\n    // 2. unquote characters (invariant: the quoted characters does not contain the special tokens)\n    numberPattern = numberPattern\n        .replace(CLDR_NUMBER_PATTERN, '{0}')\n        .replace(/'(.)'/g, '$1');\n    // Handle currency spacing (both compact and non-compact).\n    if (style === 'currency' && options.currencyDisplay !== 'name') {\n        var currencyData = data.numbers.currency[numberingSystem] ||\n            data.numbers.currency[defaultNumberingSystem];\n        // See `currencySpacing` substitution rule in TR-35.\n        // Here we always assume the currencyMatch is \"[:^S:]\" and surroundingMatch is \"[:digit:]\".\n        //\n        // Example 1: for pattern \"#,##0.00¤\" with symbol \"US$\", we replace \"¤\" with the symbol,\n        // but insert an extra non-break space before the symbol, because \"[:^S:]\" matches \"U\" in\n        // \"US$\" and \"[:digit:]\" matches the latn numbering system digits.\n        //\n        // Example 2: for pattern \"¤#,##0.00\" with symbol \"US$\", there is no spacing between symbol\n        // and number, because `$` does not match \"[:^S:]\".\n        //\n        // Implementation note: here we do the best effort to infer the insertion.\n        // We also assume that `beforeInsertBetween` and `afterInsertBetween` will never be `;`.\n        var afterCurrency = currencyData.currencySpacing.afterInsertBetween;\n        if (afterCurrency && !S_DOLLAR_UNICODE_REGEX.test(nonNameCurrencyPart)) {\n            numberPattern = numberPattern.replace('¤{0}', \"\\u00A4\" + afterCurrency + \"{0}\");\n        }\n        var beforeCurrency = currencyData.currencySpacing.beforeInsertBetween;\n        if (beforeCurrency && !CARET_S_UNICODE_REGEX.test(nonNameCurrencyPart)) {\n            numberPattern = numberPattern.replace('{0}¤', \"{0}\" + beforeCurrency + \"\\u00A4\");\n        }\n    }\n    // The following tokens are special: `{0}`, `¤`, `%`, `-`, `+`, `{c:...}.\n    var numberPatternParts = numberPattern.split(/({c:[^}]+}|\\{0\\}|[¤%\\-\\+])/g);\n    var numberParts = [];\n    var symbols = data.numbers.symbols[numberingSystem] ||\n        data.numbers.symbols[defaultNumberingSystem];\n    for (var _i = 0, numberPatternParts_1 = numberPatternParts; _i < numberPatternParts_1.length; _i++) {\n        var part = numberPatternParts_1[_i];\n        if (!part) {\n            continue;\n        }\n        switch (part) {\n            case '{0}': {\n                // We only need to handle scientific and engineering notation here.\n                numberParts.push.apply(numberParts, paritionNumberIntoParts(symbols, numberResult, notation, exponent, numberingSystem, \n                // If compact number pattern exists, do not insert group separators.\n                !compactNumberPattern && options.useGrouping, decimalNumberPattern));\n                break;\n            }\n            case '-':\n                numberParts.push({ type: 'minusSign', value: symbols.minusSign });\n                break;\n            case '+':\n                numberParts.push({ type: 'plusSign', value: symbols.plusSign });\n                break;\n            case '%':\n                numberParts.push({ type: 'percentSign', value: symbols.percentSign });\n                break;\n            case '¤':\n                // Computed above when handling currency spacing.\n                numberParts.push({ type: 'currency', value: nonNameCurrencyPart });\n                break;\n            default:\n                if (/^\\{c:/.test(part)) {\n                    numberParts.push({\n                        type: 'compact',\n                        value: part.substring(3, part.length - 1),\n                    });\n                }\n                else {\n                    // literal\n                    numberParts.push({ type: 'literal', value: part });\n                }\n                break;\n        }\n    }\n    // #endregion\n    // #region Part 2: interpolate unit pattern if necessary.\n    // ----------------------------------------------\n    switch (style) {\n        case 'currency': {\n            // `currencyDisplay: 'name'` has similar pattern handling as units.\n            if (options.currencyDisplay === 'name') {\n                var unitPattern = (data.numbers.currency[numberingSystem] ||\n                    data.numbers.currency[defaultNumberingSystem]).unitPattern;\n                // Select plural\n                var unitName = void 0;\n                var currencyNameData = data.currencies[options.currency];\n                if (currencyNameData) {\n                    unitName = selectPlural(pl, numberResult.roundedNumber * Math.pow(10, exponent), currencyNameData.displayName);\n                }\n                else {\n                    // Fallback for unknown currency\n                    unitName = options.currency;\n                }\n                // Do {0} and {1} substitution\n                var unitPatternParts = unitPattern.split(/(\\{[01]\\})/g);\n                var result = [];\n                for (var _a = 0, unitPatternParts_1 = unitPatternParts; _a < unitPatternParts_1.length; _a++) {\n                    var part = unitPatternParts_1[_a];\n                    switch (part) {\n                        case '{0}':\n                            result.push.apply(result, numberParts);\n                            break;\n                        case '{1}':\n                            result.push({ type: 'currency', value: unitName });\n                            break;\n                        default:\n                            if (part) {\n                                result.push({ type: 'literal', value: part });\n                            }\n                            break;\n                    }\n                }\n                return result;\n            }\n            else {\n                return numberParts;\n            }\n        }\n        case 'unit': {\n            var unit = options.unit, unitDisplay = options.unitDisplay;\n            var unitData = data.units.simple[unit];\n            var unitPattern = void 0;\n            if (unitData) {\n                // Simple unit pattern\n                unitPattern = selectPlural(pl, numberResult.roundedNumber * Math.pow(10, exponent), data.units.simple[unit][unitDisplay]);\n            }\n            else {\n                // See: http://unicode.org/reports/tr35/tr35-general.html#perUnitPatterns\n                // If cannot find unit in the simple pattern, it must be \"per\" compound pattern.\n                // Implementation note: we are not following TR-35 here because we need to format to parts!\n                var _b = unit.split('-per-'), numeratorUnit = _b[0], denominatorUnit = _b[1];\n                unitData = data.units.simple[numeratorUnit];\n                var numeratorUnitPattern = selectPlural(pl, numberResult.roundedNumber * Math.pow(10, exponent), data.units.simple[numeratorUnit][unitDisplay]);\n                var perUnitPattern = data.units.simple[denominatorUnit].perUnit[unitDisplay];\n                if (perUnitPattern) {\n                    // perUnitPattern exists, combine it with numeratorUnitPattern\n                    unitPattern = perUnitPattern.replace('{0}', numeratorUnitPattern);\n                }\n                else {\n                    // get compoundUnit pattern (e.g. \"{0} per {1}\"), repalce {0} with numerator pattern and {1} with\n                    // the denominator pattern in singular form.\n                    var perPattern = data.units.compound.per[unitDisplay];\n                    var denominatorPattern = selectPlural(pl, 1, data.units.simple[denominatorUnit][unitDisplay]);\n                    unitPattern = unitPattern = perPattern\n                        .replace('{0}', numeratorUnitPattern)\n                        .replace('{1}', denominatorPattern.replace('{0}', ''));\n                }\n            }\n            var result = [];\n            // We need spacing around \"{0}\" because they are not treated as \"unit\" parts, but \"literal\".\n            for (var _c = 0, _d = unitPattern.split(/(\\s*\\{0\\}\\s*)/); _c < _d.length; _c++) {\n                var part = _d[_c];\n                var interpolateMatch = /^(\\s*)\\{0\\}(\\s*)$/.exec(part);\n                if (interpolateMatch) {\n                    // Space before \"{0}\"\n                    if (interpolateMatch[1]) {\n                        result.push({ type: 'literal', value: interpolateMatch[1] });\n                    }\n                    // \"{0}\" itself\n                    result.push.apply(result, numberParts);\n                    // Space after \"{0}\"\n                    if (interpolateMatch[2]) {\n                        result.push({ type: 'literal', value: interpolateMatch[2] });\n                    }\n                }\n                else if (part) {\n                    result.push({ type: 'unit', value: part });\n                }\n            }\n            return result;\n        }\n        default:\n            return numberParts;\n    }\n    // #endregion\n}\n// A subset of https://tc39.es/ecma402/#sec-partitionnotationsubpattern\n// Plus the exponent parts handling.\nfunction paritionNumberIntoParts(symbols, numberResult, notation, exponent, numberingSystem, useGrouping, \n/**\n * This is the decimal number pattern without signs or symbols.\n * It is used to infer the group size when `useGrouping` is true.\n *\n * A typical value looks like \"#,##0.00\" (primary group size is 3).\n * Some locales like Hindi has secondary group size of 2 (e.g. \"#,##,##0.00\").\n */\ndecimalNumberPattern) {\n    var result = [];\n    // eslint-disable-next-line prefer-const\n    var n = numberResult.formattedString, x = numberResult.roundedNumber;\n    if (isNaN(x)) {\n        return [{ type: 'nan', value: n }];\n    }\n    else if (!isFinite(x)) {\n        return [{ type: 'infinity', value: n }];\n    }\n    var digitReplacementTable = digitMapping[numberingSystem];\n    if (digitReplacementTable) {\n        n = n.replace(/\\d/g, function (digit) { return digitReplacementTable[+digit] || digit; });\n    }\n    // TODO: Else use an implementation dependent algorithm to map n to the appropriate\n    // representation of n in the given numbering system.\n    var decimalSepIndex = n.indexOf('.');\n    var integer;\n    var fraction;\n    if (decimalSepIndex > 0) {\n        integer = n.slice(0, decimalSepIndex);\n        fraction = n.slice(decimalSepIndex + 1);\n    }\n    else {\n        integer = n;\n    }\n    // #region Grouping integer digits\n    // The weird compact and x >= 10000 check is to ensure consistency with Node.js and Chrome.\n    // Note that `de` does not have compact form for thousands, but Node.js does not insert grouping separator\n    // unless the rounded number is greater than 10000:\n    //   NumberFormat('de', {notation: 'compact', compactDisplay: 'short'}).format(1234) //=> \"1234\"\n    //   NumberFormat('de').format(1234) //=> \"1.234\"\n    if (useGrouping && (notation !== 'compact' || x >= 10000)) {\n        var groupSepSymbol = symbols.group;\n        var groups = [];\n        // > There may be two different grouping sizes: The primary grouping size used for the least\n        // > significant integer group, and the secondary grouping size used for more significant groups.\n        // > If a pattern contains multiple grouping separators, the interval between the last one and the\n        // > end of the integer defines the primary grouping size, and the interval between the last two\n        // > defines the secondary grouping size. All others are ignored.\n        var integerNumberPattern = decimalNumberPattern.split('.')[0];\n        var patternGroups = integerNumberPattern.split(',');\n        var primaryGroupingSize = 3;\n        var secondaryGroupingSize = 3;\n        if (patternGroups.length > 1) {\n            primaryGroupingSize = patternGroups[patternGroups.length - 1].length;\n        }\n        if (patternGroups.length > 2) {\n            secondaryGroupingSize = patternGroups[patternGroups.length - 2].length;\n        }\n        var i = integer.length - primaryGroupingSize;\n        if (i > 0) {\n            // Slice the least significant integer group\n            groups.push(integer.slice(i, i + primaryGroupingSize));\n            // Then iteratively push the more signicant groups\n            // TODO: handle surrogate pairs in some numbering system digits\n            for (i -= secondaryGroupingSize; i > 0; i -= secondaryGroupingSize) {\n                groups.push(integer.slice(i, i + secondaryGroupingSize));\n            }\n            groups.push(integer.slice(0, i + secondaryGroupingSize));\n        }\n        else {\n            groups.push(integer);\n        }\n        while (groups.length > 0) {\n            var integerGroup = groups.pop();\n            result.push({ type: 'integer', value: integerGroup });\n            if (groups.length > 0) {\n                result.push({ type: 'group', value: groupSepSymbol });\n            }\n        }\n    }\n    else {\n        result.push({ type: 'integer', value: integer });\n    }\n    // #endregion\n    if (fraction !== undefined) {\n        result.push({ type: 'decimal', value: symbols.decimal }, { type: 'fraction', value: fraction });\n    }\n    if ((notation === 'scientific' || notation === 'engineering') &&\n        isFinite(x)) {\n        result.push({ type: 'exponentSeparator', value: symbols.exponential });\n        if (exponent < 0) {\n            result.push({ type: 'exponentMinusSign', value: symbols.minusSign });\n            exponent = -exponent;\n        }\n        var exponentResult = ToRawFixed(exponent, 0, 0);\n        result.push({\n            type: 'exponentInteger',\n            value: exponentResult.formattedString,\n        });\n    }\n    return result;\n}\nfunction getPatternForSign(pattern, sign) {\n    if (pattern.indexOf(';') < 0) {\n        pattern = pattern + \";-\" + pattern;\n    }\n    var _a = pattern.split(';'), zeroPattern = _a[0], negativePattern = _a[1];\n    switch (sign) {\n        case 0:\n            return zeroPattern;\n        case -1:\n            return negativePattern;\n        default:\n            return negativePattern.indexOf('-') >= 0\n                ? negativePattern.replace(/-/g, '+')\n                : \"+\" + zeroPattern;\n    }\n}\n// Find the CLDR pattern for compact notation based on the magnitude of data and style.\n//\n// Example return value: \"¤ {c:laki}000;¤{c:laki} -0\" (`sw` locale):\n// - Notice the `{c:...}` token that wraps the compact literal.\n// - The consecutive zeros are normalized to single zero to match CLDR_NUMBER_PATTERN.\n//\n// Returning null means the compact display pattern cannot be found.\nfunction getCompactDisplayPattern(numberResult, pl, data, style, compactDisplay, currencyDisplay, numberingSystem) {\n    var _a;\n    var roundedNumber = numberResult.roundedNumber, sign = numberResult.sign, magnitude = numberResult.magnitude;\n    var magnitudeKey = String(Math.pow(10, magnitude));\n    var defaultNumberingSystem = data.numbers.nu[0];\n    var pattern;\n    if (style === 'currency' && currencyDisplay !== 'name') {\n        var byNumberingSystem = data.numbers.currency;\n        var currencyData = byNumberingSystem[numberingSystem] ||\n            byNumberingSystem[defaultNumberingSystem];\n        // NOTE: compact notation ignores currencySign!\n        var compactPluralRules = (_a = currencyData.short) === null || _a === void 0 ? void 0 : _a[magnitudeKey];\n        if (!compactPluralRules) {\n            return null;\n        }\n        pattern = selectPlural(pl, roundedNumber, compactPluralRules);\n    }\n    else {\n        var byNumberingSystem = data.numbers.decimal;\n        var byCompactDisplay = byNumberingSystem[numberingSystem] ||\n            byNumberingSystem[defaultNumberingSystem];\n        var compactPlaralRule = byCompactDisplay[compactDisplay][magnitudeKey];\n        if (!compactPlaralRule) {\n            return null;\n        }\n        pattern = selectPlural(pl, roundedNumber, compactPlaralRule);\n    }\n    // See https://unicode.org/reports/tr35/tr35-numbers.html#Compact_Number_Formats\n    // > If the value is precisely “0”, either explicit or defaulted, then the normal number format\n    // > pattern for that sort of object is supplied.\n    if (pattern === '0') {\n        return null;\n    }\n    pattern = getPatternForSign(pattern, sign)\n        // Extract compact literal from the pattern\n        .replace(/([^\\s;\\-\\+\\d¤]+)/g, '{c:$1}')\n        // We replace one or more zeros with a single zero so it matches `CLDR_NUMBER_PATTERN`.\n        .replace(/0+/, '0');\n    return pattern;\n}\nfunction selectPlural(pl, x, rules) {\n    return rules[pl.select(x)] || rules.other;\n}\n","import { FormatNumericToString } from './FormatNumericToString';\nimport { SameValue } from '../262';\nimport { ComputeExponent } from './ComputeExponent';\nimport formatToParts from './format_to_parts';\n/**\n * https://tc39.es/ecma402/#sec-formatnumberstring\n */\nexport function PartitionNumberPattern(numberFormat, x, _a) {\n    var _b;\n    var getInternalSlots = _a.getInternalSlots;\n    var internalSlots = getInternalSlots(numberFormat);\n    var pl = internalSlots.pl, dataLocaleData = internalSlots.dataLocaleData, numberingSystem = internalSlots.numberingSystem;\n    var symbols = dataLocaleData.numbers.symbols[numberingSystem] ||\n        dataLocaleData.numbers.symbols[dataLocaleData.numbers.nu[0]];\n    var magnitude = 0;\n    var exponent = 0;\n    var n;\n    if (isNaN(x)) {\n        n = symbols.nan;\n    }\n    else if (!isFinite(x)) {\n        n = symbols.infinity;\n    }\n    else {\n        if (internalSlots.style === 'percent') {\n            x *= 100;\n        }\n        _b = ComputeExponent(numberFormat, x, {\n            getInternalSlots: getInternalSlots,\n        }), exponent = _b[0], magnitude = _b[1];\n        // Preserve more precision by doing multiplication when exponent is negative.\n        x = exponent < 0 ? x * Math.pow(10, -exponent) : x / Math.pow(10, exponent);\n        var formatNumberResult = FormatNumericToString(internalSlots, x);\n        n = formatNumberResult.formattedString;\n        x = formatNumberResult.roundedNumber;\n    }\n    // Based on https://tc39.es/ecma402/#sec-getnumberformatpattern\n    // We need to do this before `x` is rounded.\n    var sign;\n    var signDisplay = internalSlots.signDisplay;\n    switch (signDisplay) {\n        case 'never':\n            sign = 0;\n            break;\n        case 'auto':\n            if (SameValue(x, 0) || x > 0 || isNaN(x)) {\n                sign = 0;\n            }\n            else {\n                sign = -1;\n            }\n            break;\n        case 'always':\n            if (SameValue(x, 0) || x > 0 || isNaN(x)) {\n                sign = 1;\n            }\n            else {\n                sign = -1;\n            }\n            break;\n        default:\n            // x === 0 -> x is 0 or x is -0\n            if (x === 0 || isNaN(x)) {\n                sign = 0;\n            }\n            else if (x > 0) {\n                sign = 1;\n            }\n            else {\n                sign = -1;\n            }\n    }\n    return formatToParts({ roundedNumber: x, formattedString: n, exponent: exponent, magnitude: magnitude, sign: sign }, internalSlots.dataLocaleData, pl, internalSlots);\n}\n","import { PartitionNumberPattern } from './PartitionNumberPattern';\nimport { ArrayCreate } from '../262';\nexport function FormatNumericToParts(nf, x, implDetails) {\n    var parts = PartitionNumberPattern(nf, x, implDetails);\n    var result = ArrayCreate(0);\n    for (var _i = 0, parts_1 = parts; _i < parts_1.length; _i++) {\n        var part = parts_1[_i];\n        result.push({\n            type: part.type,\n            value: part.value,\n        });\n    }\n    return result;\n}\n","import { GetOption } from '../GetOption';\nimport { IsWellFormedCurrencyCode } from '../IsWellFormedCurrencyCode';\nimport { IsWellFormedUnitIdentifier } from '../IsWellFormedUnitIdentifier';\n/**\n * https://tc39.es/ecma402/#sec-setnumberformatunitoptions\n */\nexport function SetNumberFormatUnitOptions(nf, options, _a) {\n    if (options === void 0) { options = Object.create(null); }\n    var getInternalSlots = _a.getInternalSlots;\n    var internalSlots = getInternalSlots(nf);\n    var style = GetOption(options, 'style', 'string', ['decimal', 'percent', 'currency', 'unit'], 'decimal');\n    internalSlots.style = style;\n    var currency = GetOption(options, 'currency', 'string', undefined, undefined);\n    if (currency !== undefined && !IsWellFormedCurrencyCode(currency)) {\n        throw RangeError('Malformed currency code');\n    }\n    if (style === 'currency' && currency === undefined) {\n        throw TypeError('currency cannot be undefined');\n    }\n    var currencyDisplay = GetOption(options, 'currencyDisplay', 'string', ['code', 'symbol', 'narrowSymbol', 'name'], 'symbol');\n    var currencySign = GetOption(options, 'currencySign', 'string', ['standard', 'accounting'], 'standard');\n    var unit = GetOption(options, 'unit', 'string', undefined, undefined);\n    if (unit !== undefined && !IsWellFormedUnitIdentifier(unit)) {\n        throw RangeError('Invalid unit argument for Intl.NumberFormat()');\n    }\n    if (style === 'unit' && unit === undefined) {\n        throw TypeError('unit cannot be undefined');\n    }\n    var unitDisplay = GetOption(options, 'unitDisplay', 'string', ['short', 'narrow', 'long'], 'short');\n    if (style === 'currency') {\n        internalSlots.currency = currency.toUpperCase();\n        internalSlots.currencyDisplay = currencyDisplay;\n        internalSlots.currencySign = currencySign;\n    }\n    if (style === 'unit') {\n        internalSlots.unit = unit;\n        internalSlots.unitDisplay = unitDisplay;\n    }\n}\n","import { GetNumberOption } from '../GetNumberOption';\nimport { DefaultNumberOption } from '../DefaultNumberOption';\n/**\n * https://tc39.es/ecma402/#sec-setnfdigitoptions\n */\nexport function SetNumberFormatDigitOptions(internalSlots, opts, mnfdDefault, mxfdDefault, notation) {\n    var mnid = GetNumberOption(opts, 'minimumIntegerDigits', 1, 21, 1);\n    var mnfd = opts.minimumFractionDigits;\n    var mxfd = opts.maximumFractionDigits;\n    var mnsd = opts.minimumSignificantDigits;\n    var mxsd = opts.maximumSignificantDigits;\n    internalSlots.minimumIntegerDigits = mnid;\n    if (mnsd !== undefined || mxsd !== undefined) {\n        internalSlots.roundingType = 'significantDigits';\n        mnsd = DefaultNumberOption(mnsd, 1, 21, 1);\n        mxsd = DefaultNumberOption(mxsd, mnsd, 21, 21);\n        internalSlots.minimumSignificantDigits = mnsd;\n        internalSlots.maximumSignificantDigits = mxsd;\n    }\n    else if (mnfd !== undefined || mxfd !== undefined) {\n        internalSlots.roundingType = 'fractionDigits';\n        mnfd = DefaultNumberOption(mnfd, 0, 20, mnfdDefault);\n        var mxfdActualDefault = Math.max(mnfd, mxfdDefault);\n        mxfd = DefaultNumberOption(mxfd, mnfd, 20, mxfdActualDefault);\n        internalSlots.minimumFractionDigits = mnfd;\n        internalSlots.maximumFractionDigits = mxfd;\n    }\n    else if (notation === 'compact') {\n        internalSlots.roundingType = 'compactRounding';\n    }\n    else {\n        internalSlots.roundingType = 'fractionDigits';\n        internalSlots.minimumFractionDigits = mnfdDefault;\n        internalSlots.maximumFractionDigits = mxfdDefault;\n    }\n}\n","import { CanonicalizeLocaleList } from '../CanonicalizeLocaleList';\nimport { ToObject } from '../262';\nimport { GetOption } from '../GetOption';\nimport { ResolveLocale } from '../ResolveLocale';\nimport { SetNumberFormatUnitOptions } from './SetNumberFormatUnitOptions';\nimport { CurrencyDigits } from './CurrencyDigits';\nimport { SetNumberFormatDigitOptions } from './SetNumberFormatDigitOptions';\nimport { invariant } from '../utils';\n/**\n * Chop off the unicode extension from the locale string.\n */\nfunction removeUnicodeExtensionFromLocale(canonicalLocale) {\n    var extensionIndex = canonicalLocale.indexOf('-u-');\n    return extensionIndex >= 0\n        ? canonicalLocale.slice(0, extensionIndex)\n        : canonicalLocale;\n}\n/**\n * https://tc39.es/ecma402/#sec-initializenumberformat\n */\nexport function InitializeNumberFormat(nf, locales, opts, _a) {\n    var getInternalSlots = _a.getInternalSlots, localeData = _a.localeData, availableLocales = _a.availableLocales, numberingSystemNames = _a.numberingSystemNames, getDefaultLocale = _a.getDefaultLocale, currencyDigitsData = _a.currencyDigitsData;\n    // @ts-ignore\n    var requestedLocales = CanonicalizeLocaleList(locales);\n    var options = opts === undefined ? Object.create(null) : ToObject(opts);\n    var opt = Object.create(null);\n    var matcher = GetOption(options, 'localeMatcher', 'string', ['lookup', 'best fit'], 'best fit');\n    opt.localeMatcher = matcher;\n    var numberingSystem = GetOption(options, 'numberingSystem', 'string', undefined, undefined);\n    if (numberingSystem !== undefined &&\n        numberingSystemNames.indexOf(numberingSystem) < 0) {\n        // 8.a. If numberingSystem does not match the Unicode Locale Identifier type nonterminal,\n        // throw a RangeError exception.\n        throw RangeError(\"Invalid numberingSystems: \" + numberingSystem);\n    }\n    opt.nu = numberingSystem;\n    var r = ResolveLocale(availableLocales, requestedLocales, opt, \n    // [[RelevantExtensionKeys]] slot, which is a constant\n    ['nu'], localeData, getDefaultLocale);\n    var dataLocaleData = localeData[removeUnicodeExtensionFromLocale(r.locale)];\n    invariant(!!dataLocaleData, \"Missing locale data for \" + r.locale);\n    var internalSlots = getInternalSlots(nf);\n    internalSlots.locale = r.locale;\n    internalSlots.dataLocale = r.dataLocale;\n    internalSlots.numberingSystem = r.nu;\n    internalSlots.dataLocaleData = dataLocaleData;\n    SetNumberFormatUnitOptions(nf, options, { getInternalSlots: getInternalSlots });\n    var style = internalSlots.style;\n    var mnfdDefault;\n    var mxfdDefault;\n    if (style === 'currency') {\n        var currency = internalSlots.currency;\n        var cDigits = CurrencyDigits(currency, { currencyDigitsData: currencyDigitsData });\n        mnfdDefault = cDigits;\n        mxfdDefault = cDigits;\n    }\n    else {\n        mnfdDefault = 0;\n        mxfdDefault = style === 'percent' ? 0 : 3;\n    }\n    var notation = GetOption(options, 'notation', 'string', ['standard', 'scientific', 'engineering', 'compact'], 'standard');\n    internalSlots.notation = notation;\n    SetNumberFormatDigitOptions(internalSlots, options, mnfdDefault, mxfdDefault, notation);\n    var compactDisplay = GetOption(options, 'compactDisplay', 'string', ['short', 'long'], 'short');\n    if (notation === 'compact') {\n        internalSlots.compactDisplay = compactDisplay;\n    }\n    var useGrouping = GetOption(options, 'useGrouping', 'boolean', undefined, true);\n    internalSlots.useGrouping = useGrouping;\n    var signDisplay = GetOption(options, 'signDisplay', 'string', ['auto', 'never', 'always', 'exceptZero'], 'auto');\n    internalSlots.signDisplay = signDisplay;\n    return nf;\n}\n","import { invariant } from '../utils';\nimport { ToNumber } from '../262';\n/**\n * http://ecma-international.org/ecma-402/7.0/index.html#sec-getoperands\n * @param s\n */\nexport function GetOperands(s) {\n    invariant(typeof s === 'string', \"GetOperands should have been called with a string\");\n    var n = ToNumber(s);\n    invariant(isFinite(n), 'n should be finite');\n    var dp = s.indexOf('.');\n    var iv;\n    var f;\n    var v;\n    var fv = '';\n    if (dp === -1) {\n        iv = n;\n        f = 0;\n        v = 0;\n    }\n    else {\n        iv = s.slice(0, dp);\n        fv = s.slice(dp, s.length);\n        f = ToNumber(fv);\n        v = fv.length;\n    }\n    var i = Math.abs(ToNumber(iv));\n    var w;\n    var t;\n    if (f !== 0) {\n        var ft = fv.replace(/0+$/, '');\n        w = ft.length;\n        t = ToNumber(ft);\n    }\n    else {\n        w = 0;\n        t = 0;\n    }\n    return {\n        Number: n,\n        IntegerDigits: i,\n        NumberOfFractionDigits: v,\n        NumberOfFractionDigitsWithoutTrailing: w,\n        FractionDigits: f,\n        FractionDigitsWithoutTrailing: t,\n    };\n}\n","import { CanonicalizeLocaleList } from '../CanonicalizeLocaleList';\nimport { ToObject } from '../262';\nimport { GetOption } from '../GetOption';\nimport { SetNumberFormatDigitOptions } from '../NumberFormat/SetNumberFormatDigitOptions';\nimport { ResolveLocale } from '../ResolveLocale';\nexport function InitializePluralRules(pl, locales, options, _a) {\n    var availableLocales = _a.availableLocales, relevantExtensionKeys = _a.relevantExtensionKeys, localeData = _a.localeData, getDefaultLocale = _a.getDefaultLocale, getInternalSlots = _a.getInternalSlots;\n    var requestedLocales = CanonicalizeLocaleList(locales);\n    var opt = Object.create(null);\n    var opts = options === undefined ? Object.create(null) : ToObject(options);\n    var internalSlots = getInternalSlots(pl);\n    internalSlots.initializedPluralRules = true;\n    var matcher = GetOption(opts, 'localeMatcher', 'string', ['best fit', 'lookup'], 'best fit');\n    opt.localeMatcher = matcher;\n    internalSlots.type = GetOption(opts, 'type', 'string', ['cardinal', 'ordinal'], 'cardinal');\n    SetNumberFormatDigitOptions(internalSlots, opts, 0, 3, 'standard');\n    var r = ResolveLocale(availableLocales, requestedLocales, opt, relevantExtensionKeys, localeData, getDefaultLocale);\n    internalSlots.locale = r.locale;\n    return pl;\n}\n","import { invariant } from '../utils';\nimport { Type } from '../262';\nimport { FormatNumericToString } from '../NumberFormat/FormatNumericToString';\nimport { GetOperands } from './GetOperands';\n/**\n * http://ecma-international.org/ecma-402/7.0/index.html#sec-resolveplural\n * @param pl\n * @param n\n * @param PluralRuleSelect Has to pass in bc it's implementation-specific\n */\nexport function ResolvePlural(pl, n, _a) {\n    var getInternalSlots = _a.getInternalSlots, PluralRuleSelect = _a.PluralRuleSelect;\n    var internalSlots = getInternalSlots(pl);\n    invariant(Type(internalSlots) === 'Object', 'pl has to be an object');\n    invariant('initializedPluralRules' in internalSlots, 'pluralrules must be initialized');\n    invariant(Type(n) === 'Number', 'n must be a number');\n    if (!isFinite(n)) {\n        return 'other';\n    }\n    var locale = internalSlots.locale, type = internalSlots.type;\n    var res = FormatNumericToString(internalSlots, n);\n    var s = res.formattedString;\n    var operands = GetOperands(s);\n    return PluralRuleSelect(locale, type, n, operands);\n}\n","import { invariant } from '../utils';\nimport { Type } from '../262';\n/**\n * https://tc39.es/proposal-intl-relative-time/#sec-singularrelativetimeunit\n * @param unit\n */\nexport function SingularRelativeTimeUnit(unit) {\n    invariant(Type(unit) === 'String', 'unit must be a string');\n    if (unit === 'seconds')\n        return 'second';\n    if (unit === 'minutes')\n        return 'minute';\n    if (unit === 'hours')\n        return 'hour';\n    if (unit === 'days')\n        return 'day';\n    if (unit === 'weeks')\n        return 'week';\n    if (unit === 'months')\n        return 'month';\n    if (unit === 'quarters')\n        return 'quarter';\n    if (unit === 'years')\n        return 'year';\n    if (unit !== 'second' &&\n        unit !== 'minute' &&\n        unit !== 'hour' &&\n        unit !== 'day' &&\n        unit !== 'week' &&\n        unit !== 'month' &&\n        unit !== 'quarter' &&\n        unit !== 'year') {\n        throw new RangeError('invalid unit');\n    }\n    return unit;\n}\n","import { PartitionPattern } from '../PartitionPattern';\nimport { invariant } from '../utils';\nexport function MakePartsList(pattern, unit, parts) {\n    var patternParts = PartitionPattern(pattern);\n    var result = [];\n    for (var _i = 0, patternParts_1 = patternParts; _i < patternParts_1.length; _i++) {\n        var patternPart = patternParts_1[_i];\n        if (patternPart.type === 'literal') {\n            result.push({\n                type: 'literal',\n                value: patternPart.value,\n            });\n        }\n        else {\n            invariant(patternPart.type === '0', \"Malformed pattern \" + pattern);\n            for (var _a = 0, parts_1 = parts; _a < parts_1.length; _a++) {\n                var part = parts_1[_a];\n                result.push({\n                    type: part.type,\n                    value: part.value,\n                    unit: unit,\n                });\n            }\n        }\n    }\n    return result;\n}\n","import { invariant } from '../utils';\nimport { SingularRelativeTimeUnit } from './SingularRelativeTimeUnit';\nimport { MakePartsList } from './MakePartsList';\nimport { ToString, Type, SameValue } from '../262';\nexport function PartitionRelativeTimePattern(rtf, value, unit, _a) {\n    var getInternalSlots = _a.getInternalSlots;\n    invariant(Type(value) === 'Number', \"value must be number, instead got \" + typeof value, TypeError);\n    invariant(Type(unit) === 'String', \"unit must be number, instead got \" + typeof value, TypeError);\n    if (isNaN(value) || !isFinite(value)) {\n        throw new RangeError(\"Invalid value \" + value);\n    }\n    var resolvedUnit = SingularRelativeTimeUnit(unit);\n    var _b = getInternalSlots(rtf), fields = _b.fields, style = _b.style, numeric = _b.numeric, pluralRules = _b.pluralRules, numberFormat = _b.numberFormat;\n    var entry = resolvedUnit;\n    if (style === 'short') {\n        entry = resolvedUnit + \"-short\";\n    }\n    else if (style === 'narrow') {\n        entry = resolvedUnit + \"-narrow\";\n    }\n    if (!(entry in fields)) {\n        entry = resolvedUnit;\n    }\n    var patterns = fields[entry];\n    if (numeric === 'auto') {\n        if (ToString(value) in patterns) {\n            return [\n                {\n                    type: 'literal',\n                    value: patterns[ToString(value)],\n                },\n            ];\n        }\n    }\n    var tl = 'future';\n    if (SameValue(value, -0) || value < 0) {\n        tl = 'past';\n    }\n    var po = patterns[tl];\n    var fv = typeof numberFormat.formatToParts === 'function'\n        ? numberFormat.formatToParts(Math.abs(value))\n        : // TODO: If formatToParts is not supported, we assume the whole formatted\n            // number is a part\n            [\n                {\n                    type: 'literal',\n                    value: numberFormat.format(Math.abs(value)),\n                    unit: unit,\n                },\n            ];\n    var pr = pluralRules.select(value);\n    var pattern = po[pr];\n    return MakePartsList(pattern, resolvedUnit, fv);\n}\n","import { PartitionRelativeTimePattern } from './PartitionRelativeTimePattern';\nexport function FormatRelativeTime(rtf, value, unit, implDetails) {\n    var parts = PartitionRelativeTimePattern(rtf, value, unit, implDetails);\n    var result = '';\n    for (var _i = 0, parts_1 = parts; _i < parts_1.length; _i++) {\n        var part = parts_1[_i];\n        result += part.value;\n    }\n    return result;\n}\n","import { PartitionRelativeTimePattern } from './PartitionRelativeTimePattern';\nimport { ArrayCreate } from '../262';\nexport function FormatRelativeTimeToParts(rtf, value, unit, implDetails) {\n    var parts = PartitionRelativeTimePattern(rtf, value, unit, implDetails);\n    var result = ArrayCreate(0);\n    for (var _i = 0, parts_1 = parts; _i < parts_1.length; _i++) {\n        var part = parts_1[_i];\n        var o = {\n            type: part.type,\n            value: part.value,\n        };\n        if ('unit' in part) {\n            o.unit = part.unit;\n        }\n        result.push(o);\n    }\n    return result;\n}\n","import { CanonicalizeLocaleList } from '../CanonicalizeLocaleList';\nimport { ToObject } from '../262';\nimport { GetOption } from '../GetOption';\nimport { ResolveLocale } from '../ResolveLocale';\nimport { invariant } from '../utils';\nvar NUMBERING_SYSTEM_REGEX = /^[a-z0-9]{3,8}(-[a-z0-9]{3,8})*$/i;\nexport function InitializeRelativeTimeFormat(rtf, locales, options, _a) {\n    var getInternalSlots = _a.getInternalSlots, availableLocales = _a.availableLocales, relevantExtensionKeys = _a.relevantExtensionKeys, localeData = _a.localeData, getDefaultLocale = _a.getDefaultLocale;\n    var internalSlots = getInternalSlots(rtf);\n    internalSlots.initializedRelativeTimeFormat = true;\n    var requestedLocales = CanonicalizeLocaleList(locales);\n    var opt = Object.create(null);\n    var opts = options === undefined ? Object.create(null) : ToObject(options);\n    var matcher = GetOption(opts, 'localeMatcher', 'string', ['best fit', 'lookup'], 'best fit');\n    opt.localeMatcher = matcher;\n    var numberingSystem = GetOption(opts, 'numberingSystem', 'string', undefined, undefined);\n    if (numberingSystem !== undefined) {\n        if (!NUMBERING_SYSTEM_REGEX.test(numberingSystem)) {\n            throw new RangeError(\"Invalid numbering system \" + numberingSystem);\n        }\n    }\n    opt.nu = numberingSystem;\n    var r = ResolveLocale(availableLocales, requestedLocales, opt, relevantExtensionKeys, localeData, getDefaultLocale);\n    var locale = r.locale, nu = r.nu;\n    internalSlots.locale = locale;\n    internalSlots.style = GetOption(opts, 'style', 'string', ['long', 'narrow', 'short'], 'long');\n    internalSlots.numeric = GetOption(opts, 'numeric', 'string', ['always', 'auto'], 'always');\n    var fields = localeData[locale];\n    invariant(!!fields, \"Missing locale data for \" + locale);\n    internalSlots.fields = fields;\n    internalSlots.numberFormat = new Intl.NumberFormat(locales);\n    internalSlots.pluralRules = new Intl.PluralRules(locales);\n    internalSlots.numberingSystem = nu;\n    return rtf;\n}\n","import { UNICODE_EXTENSION_SEQUENCE_REGEX } from './utils';\nimport { BestAvailableLocale } from './BestAvailableLocale';\n/**\n * https://tc39.es/ecma402/#sec-lookupsupportedlocales\n * @param availableLocales\n * @param requestedLocales\n */\nexport function LookupSupportedLocales(availableLocales, requestedLocales) {\n    var subset = [];\n    for (var _i = 0, requestedLocales_1 = requestedLocales; _i < requestedLocales_1.length; _i++) {\n        var locale = requestedLocales_1[_i];\n        var noExtensionLocale = locale.replace(UNICODE_EXTENSION_SEQUENCE_REGEX, '');\n        var availableLocale = BestAvailableLocale(availableLocales, noExtensionLocale);\n        if (availableLocale) {\n            subset.push(availableLocale);\n        }\n    }\n    return subset;\n}\n","import { ToObject } from './262';\nimport { GetOption } from './GetOption';\nimport { LookupSupportedLocales } from './LookupSupportedLocales';\n/**\n * https://tc39.es/ecma402/#sec-supportedlocales\n * @param availableLocales\n * @param requestedLocales\n * @param options\n */\nexport function SupportedLocales(availableLocales, requestedLocales, options) {\n    var matcher = 'best fit';\n    if (options !== undefined) {\n        options = ToObject(options);\n        matcher = GetOption(options, 'localeMatcher', 'string', ['lookup', 'best fit'], 'best fit');\n    }\n    if (matcher === 'best fit') {\n        return LookupSupportedLocales(availableLocales, requestedLocales);\n    }\n    return LookupSupportedLocales(availableLocales, requestedLocales);\n}\n","import { __assign, __extends } from \"tslib\";\nexport function getLocaleHierarchy(locale) {\n    var results = [locale];\n    var localeParts = locale.split('-');\n    for (var i = localeParts.length; i > 1; i--) {\n        results.push(localeParts.slice(0, i - 1).join('-'));\n    }\n    return results;\n}\nvar MissingLocaleDataError = /** @class */ (function (_super) {\n    __extends(MissingLocaleDataError, _super);\n    function MissingLocaleDataError() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'MISSING_LOCALE_DATA';\n        return _this;\n    }\n    return MissingLocaleDataError;\n}(Error));\nexport function isMissingLocaleDataError(e) {\n    return e.type === 'MISSING_LOCALE_DATA';\n}\nexport function unpackData(locale, localeData, \n/** By default shallow merge the dictionaries. */\nreducer) {\n    if (reducer === void 0) { reducer = function (all, d) { return (__assign(__assign({}, all), d)); }; }\n    var localeHierarchy = getLocaleHierarchy(locale);\n    var dataToMerge = localeHierarchy\n        .map(function (l) { return localeData.data[l]; })\n        .filter(Boolean);\n    if (!dataToMerge.length) {\n        throw new MissingLocaleDataError(\"Missing locale data for \\\"\" + locale + \"\\\", lookup hierarchy: \" + localeHierarchy.join(', '));\n    }\n    dataToMerge.reverse();\n    return dataToMerge.reduce(reducer, {});\n}\n","export var RangePatternType;\n(function (RangePatternType) {\n    RangePatternType[\"startRange\"] = \"startRange\";\n    RangePatternType[\"shared\"] = \"shared\";\n    RangePatternType[\"endRange\"] = \"endRange\";\n})(RangePatternType || (RangePatternType = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _1 = require(\"./\");\nvar should_polyfill_1 = require(\"./should-polyfill\");\nif (should_polyfill_1.shouldPolyfill()) {\n    Object.defineProperty(Intl, 'PluralRules', {\n        value: _1.PluralRules,\n        writable: true,\n        enumerable: false,\n        configurable: true,\n    });\n}\n"],"names":["Object","defineProperty","exports","value","internalSlotMap","WeakMap","x","internalSlots","get","create","set","PluralRules","tslib_1","require","ecma402_abstract_1","get_internal_slots_1","__importDefault","validateInstance","instance","method","TypeError","String","PluralRuleSelect","locale","type","_n","_a","IntegerDigits","NumberOfFractionDigits","FractionDigits","localeData","fn","locales","options","this","constructor","InitializePluralRules","availableLocales","relevantExtensionKeys","getDefaultLocale","getInternalSlots","default","prototype","resolvedOptions","opts","forEach","field","val","undefined","pluralCategories","__spreadArrays","categories","select","n","ToNumber","ResolvePlural","toString","supportedLocalesOf","SupportedLocales","CanonicalizeLocaleList","__addLocaleData","data","_i","arguments","length","_loop_1","datum","unpackData","e","isMissingLocaleDataError","data_1","keys","__defaultLocale","polyfilled","Symbol","toStringTag","writable","enumerable","configurable","error","ex","getMagnitude","Math","floor","log","LOG10E","repeat","s","times","arr","Array","i","join","setInternalSlot","map","pl","setMultiInternalSlots","props","k","getInternalSlot","getMultiInternalSlots","fields","slots","reduce","all","f","isLiteralPart","patternPart","target","name","UNICODE_EXTENSION_SEQUENCE_REGEX","invariant","condition","message","Err","Error","DATE_TIME_PROPS","DATE_TIME_REGEX","expPatternTrimmer","matchSkeletonPattern","match","result","len","era","year","RangeError","month","day","weekday","hour12","hour","minute","second","timeZoneName","skeletonTokenToTable2","c","processDateTimePattern","pattern","literals","pattern12","replace","_","literal","push","m","parseDateTimeSkeleton","skeleton","rawPattern","rangePatterns","intervalFormatFallback","rangePatterns12","key","intervalResult","patternParts","pattern_1","pattern12_1","__assign","splitRangePattern","split","filter","Boolean","source","splitFallbackRangePattern","_b","parts","splitIndex","exec","index","slice","isNumericType","t","bestFitFormatMatcherScore","format","score","DATE_TIME_PROPS_1","prop","optionsProp","formatProp","values","optionsPropIndex","indexOf","formatPropIndex","delta","max","min","BestFitFormatMatcher","formats","bestScore","Infinity","bestFormat","isArray","formats_1","skeletonFormat","patternFormat","skeletonValue","patternValue","requestedValue","Intl","getCanonicalLocales","CanonicalizeTimeZoneName","tz","tzData","uppercaseLinks","uppercasedTz","toUpperCase","uppercasedZones","z","ianaTimeZone","BasicFormatMatcher","DateTimeStyleFormat","dateStyle","timeStyle","dataLocaleData","dateFormat","timeFormat","connector","dateTimeFormat","ToString","o","NaN","Number","TimeClip","time","isFinite","abs","number","isNaN","SameValue","integer","ToInteger","ToObject","arg","y","is","ArrayCreate","HasOwnProperty","hasOwnProperty","call","Type","MS_PER_DAY","mod","Day","WeekDay","DayFromYear","TimeFromYear","YearFromTime","ceil","DaysInYear","DayWithinYear","InLeapYear","MonthFromTime","dwy","leap","DateFromTime","mft","HourFromTime","MS_PER_MINUTE","MinFromTime","MS_PER_SECOND","SecFromTime","ToLocalTime","calendar","timeZone","zoneData","offset","dst","getApplicableZoneData","timeZoneOffset","inDST","relatedYear","yearName","pad","offsetToGmtString","gmtFormat","hourFormat","offsetInMs","style","offsetInMinutes","mins","hours","positivePattern","negativePattern","offsetStr","FormatDateTimePattern","dtf","getDefaultTimeZone","dataLocale","nfOptions","useGrouping","nf","NumberFormat","nf2Options","minimumIntegerDigits","nf2","tm","patternParts_1","p","fv","v","hourCycle","timeZoneData","pm","am","PartitionPattern","beginIndex","endIndex","nextIndex","substring","PartitionDateTimePattern","implDetails","FormatDateTime","parts_1","TABLE_2_FIELDS","PartitionDateTimeRangePattern","rangePattern","tm1","tm2","dateFieldsPracticallyEqual","patternContainsLargerDateField","TABLE_2_FIELDS_1","fieldName","v1","v2","rp","ampm","result_2","result_1","_c","rangePatternPart","partResult","_d","partResult_1","concat","FormatDateTimeRange","FormatDateTimeRangeToParts","part","FormatDateTimeToParts","ToDateTimeOptions","required","defaults","needDefaults","_e","_f","_g","GetOption","fallback","BestAvailableLocale","candidate","pos","lastIndexOf","UnicodeExtensionValue","extension","size","searchValue","start","end","done","ResolveLocale","requestedLocales","r","localeMatcher","requestedLocales_1","noExtensionLocale","availableLocale","LookupMatcher","BestFitMatcher","foundLocale","supportedExtension","relevantExtensionKeys_1","foundLocaleData","keyLocaleData","supportedExtensionAddition","optionsValue","privateIndex","preExtension","postExtension","IsValidTimeZoneName","Set","has","resolveHourCycle","hc","hcDefault","TYPE_REGEX","InitializeDateTimeFormat","opt","matcher","test","ca","numberingSystem","nu","isTimeRelated","NOT_A_Z_REGEX","IsWellFormedCurrencyCode","currency","UNICODE_REGION_SUBTAG_REGEX","ALPHA_4","CanonicalCodeForDisplayNames","code","region","script","DefaultNumberOption","GetNumberOption","property","minimum","maximum","SANCTIONED_UNITS","removeUnitNamespace","unit","SIMPLE_UNITS","IsSanctionedSimpleUnitIdentifier","unitIdentifier","IsWellFormedUnitIdentifier","toLowerCase","units","numerator","denominator","ComputeExponentForMagnitude","numberFormat","magnitude","notation","compactDisplay","currencyDisplay","thresholdMap","numbers","short","decimal","long","num","pow","thresholds","magnitudeKey","other","ToRawPrecision","minPrecision","maxPrecision","xFinal","int","xToString","xToStringExponentIndex","xToStringMantissa","xToStringExponent","xToStringMantissaWithoutDecimalPoint","decimalPlaceOffset","round","adjustDecimalPlace","cut","formattedString","roundedNumber","integerDigitsCount","ToRawFixed","minFraction","maxFraction","mantissa","exponent","a","b","FormatNumericToString","intlObject","isNegative","roundingType","minimumSignificantDigits","maximumSignificantDigits","minimumFractionDigits","maximumFractionDigits","string","minInteger","ComputeExponent","formatNumberResult","CurrencyDigits","currencyDigitsData","S_UNICODE_REGEX","CARET_S_UNICODE_REGEX","RegExp","S_DOLLAR_UNICODE_REGEX","CLDR_NUMBER_PATTERN","formatToParts","numberResult","nonNameCurrencyPart","numberPattern","sign","defaultNumberingSystem","compactNumberPattern","compactPluralRules","byNumberingSystem","selectPlural","compactPlaralRule","getPatternForSign","getCompactDisplayPattern","byCurrencyDisplay","currencies","symbol","narrow","standard","currencyData","currencySign","percent","decimalNumberPattern","afterCurrency","currencySpacing","afterInsertBetween","beforeCurrency","beforeInsertBetween","numberPatternParts","numberParts","symbols","numberPatternParts_1","apply","paritionNumberIntoParts","minusSign","plusSign","percentSign","unitPattern","unitName","currencyNameData","displayName","unitPatternParts_1","unitDisplay","unitData","simple","numeratorUnit","denominatorUnit","numeratorUnitPattern","perUnitPattern","perUnit","perPattern","compound","per","denominatorPattern","interpolateMatch","digitReplacementTable","digitMapping","digit","fraction","decimalSepIndex","groupSepSymbol","group","groups","patternGroups","primaryGroupingSize","secondaryGroupingSize","integerGroup","pop","exponential","exponentResult","zeroPattern","rules","PartitionNumberPattern","nan","infinity","signDisplay","FormatNumericToParts","SetNumberFormatUnitOptions","SetNumberFormatDigitOptions","mnfdDefault","mxfdDefault","mnid","mnfd","mxfd","mnsd","mxsd","InitializeNumberFormat","numberingSystemNames","canonicalLocale","extensionIndex","cDigits","GetOperands","iv","dp","w","ft","NumberOfFractionDigitsWithoutTrailing","FractionDigitsWithoutTrailing","initializedPluralRules","SingularRelativeTimeUnit","MakePartsList","PartitionRelativeTimePattern","rtf","resolvedUnit","numeric","pluralRules","entry","patterns","tl","po","FormatRelativeTime","FormatRelativeTimeToParts","NUMBERING_SYSTEM_REGEX","InitializeRelativeTimeFormat","initializedRelativeTimeFormat","LookupSupportedLocales","subset","getLocaleHierarchy","results","localeParts","RangePatternType","MissingLocaleDataError","_super","_this","__extends","reducer","d","localeHierarchy","dataToMerge","l","reverse","_1","shouldPolyfill"],"sourceRoot":""}